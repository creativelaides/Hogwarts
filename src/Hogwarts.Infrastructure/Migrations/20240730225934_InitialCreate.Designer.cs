// <auto-generated />
using System;
using Hogwarts.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Hogwarts.Infrastructure.Migrations
{
    [DbContext(typeof(HogwartsDbContext))]
    [Migration("20240730225934_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hogwarts.Domain.Entities.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Animal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Element")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Founder")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Houses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("97b63ba7-d78f-448f-b13f-72debe50bea9"),
                            Animal = "Lion",
                            Element = "Fire",
                            Founder = "Godric Gryffindor",
                            Name = "Gryffindor"
                        },
                        new
                        {
                            Id = new Guid("7325de75-9112-4d2c-8280-74be7ee00bf1"),
                            Animal = "Badger",
                            Element = "Earth",
                            Founder = "Helga Hufflepuff",
                            Name = "Hufflepuff"
                        },
                        new
                        {
                            Id = new Guid("384c1d09-4117-4b8d-915c-156e0714957d"),
                            Animal = "Eagle",
                            Element = "Air",
                            Founder = "Rowena Ravenclaw",
                            Name = "Ravenclaw"
                        },
                        new
                        {
                            Id = new Guid("b534bd09-0c6d-49b0-84c3-2c8150d4cc47"),
                            Animal = "Serpent",
                            Element = "Water",
                            Founder = "Salazar Slytherin",
                            Name = "Slytherin"
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Picture", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.ToTable("Pictures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e7455d47-a795-4d53-9060-cf9981bdbdf8"),
                            Url = "https://picsum.photos/640/480/?image=218"
                        },
                        new
                        {
                            Id = new Guid("166effd7-f9c7-4ccd-a1a8-08ba0dc4ac95"),
                            Url = "https://picsum.photos/640/480/?image=17"
                        },
                        new
                        {
                            Id = new Guid("25500d78-69eb-4667-8cbf-7e098df88618"),
                            Url = "https://picsum.photos/640/480/?image=189"
                        },
                        new
                        {
                            Id = new Guid("3730235f-0b9a-4498-9596-443260c7fbd0"),
                            Url = "https://picsum.photos/640/480/?image=910"
                        },
                        new
                        {
                            Id = new Guid("8b27cd0b-89f4-4c8c-8f9f-5cc7b9de5ade"),
                            Url = "https://picsum.photos/640/480/?image=877"
                        },
                        new
                        {
                            Id = new Guid("b07aba7f-5bd1-43c6-847b-53bc91629f22"),
                            Url = "https://picsum.photos/640/480/?image=64"
                        },
                        new
                        {
                            Id = new Guid("aa0d9359-3b47-48c9-952a-ca4828ece1d9"),
                            Url = "https://picsum.photos/640/480/?image=689"
                        },
                        new
                        {
                            Id = new Guid("525d00fa-d561-4011-a7d1-d530e6dd5acb"),
                            Url = "https://picsum.photos/640/480/?image=734"
                        },
                        new
                        {
                            Id = new Guid("2d6d1f89-8790-4e05-9905-c05ad4925eb7"),
                            Url = "https://picsum.photos/640/480/?image=390"
                        },
                        new
                        {
                            Id = new Guid("9737012f-27ad-4e90-9e22-a1d568f9462a"),
                            Url = "https://picsum.photos/640/480/?image=184"
                        },
                        new
                        {
                            Id = new Guid("55b6afa3-7e3f-41b1-9b36-0b7aa74f9ceb"),
                            Url = "https://picsum.photos/640/480/?image=45"
                        },
                        new
                        {
                            Id = new Guid("b12650df-3f08-4b1e-8de4-962fe2ec3bb9"),
                            Url = "https://picsum.photos/640/480/?image=751"
                        },
                        new
                        {
                            Id = new Guid("7b5a733f-672f-4626-a2f3-f1c7cdd7d75a"),
                            Url = "https://picsum.photos/640/480/?image=731"
                        },
                        new
                        {
                            Id = new Guid("dfacad66-b3a7-4a56-b837-002e4b003999"),
                            Url = "https://picsum.photos/640/480/?image=668"
                        },
                        new
                        {
                            Id = new Guid("7f5f11b7-205f-408d-ab4f-24105e76a533"),
                            Url = "https://picsum.photos/640/480/?image=576"
                        },
                        new
                        {
                            Id = new Guid("d33f3270-c2b4-49e1-90a9-e1352cbf9f73"),
                            Url = "https://picsum.photos/640/480/?image=8"
                        },
                        new
                        {
                            Id = new Guid("5eb9d481-d716-4f33-a5d3-bea17aa48785"),
                            Url = "https://picsum.photos/640/480/?image=774"
                        },
                        new
                        {
                            Id = new Guid("e64b0984-01da-46a0-b8e8-fd7d0dd57ff8"),
                            Url = "https://picsum.photos/640/480/?image=648"
                        },
                        new
                        {
                            Id = new Guid("89ce1eaa-e13b-4faa-98d8-e7d11b0a8cdd"),
                            Url = "https://picsum.photos/640/480/?image=965"
                        },
                        new
                        {
                            Id = new Guid("2e6c4960-6047-4fb7-8765-8f3a9b60f89c"),
                            Url = "https://picsum.photos/640/480/?image=782"
                        },
                        new
                        {
                            Id = new Guid("5e4f57d8-891d-42cc-82d9-079870cbbfd8"),
                            Url = "https://picsum.photos/640/480/?image=858"
                        },
                        new
                        {
                            Id = new Guid("028b448a-acda-48e3-8c61-7f98cf13d419"),
                            Url = "https://picsum.photos/640/480/?image=1075"
                        },
                        new
                        {
                            Id = new Guid("83141807-efce-4762-8688-7bc51978f36a"),
                            Url = "https://picsum.photos/640/480/?image=42"
                        },
                        new
                        {
                            Id = new Guid("06d95a53-55e2-48f6-912e-68cbc3e65f0e"),
                            Url = "https://picsum.photos/640/480/?image=948"
                        },
                        new
                        {
                            Id = new Guid("84b2e2a6-f1de-4c51-80b6-2590fbef90dc"),
                            Url = "https://picsum.photos/640/480/?image=963"
                        },
                        new
                        {
                            Id = new Guid("4543bd5a-b598-4f02-8ce8-bdcd65b07558"),
                            Url = "https://picsum.photos/640/480/?image=661"
                        },
                        new
                        {
                            Id = new Guid("cbd23f44-53bd-4c9d-afc6-03299bf99d0a"),
                            Url = "https://picsum.photos/640/480/?image=755"
                        },
                        new
                        {
                            Id = new Guid("2b62e0a8-02fa-41dc-bc19-91b9a05752c3"),
                            Url = "https://picsum.photos/640/480/?image=131"
                        },
                        new
                        {
                            Id = new Guid("2a3ee031-526c-4002-8b40-a78bf881e21f"),
                            Url = "https://picsum.photos/640/480/?image=765"
                        },
                        new
                        {
                            Id = new Guid("702c3c6c-6501-4680-b057-c5eabc1e4f8d"),
                            Url = "https://picsum.photos/640/480/?image=114"
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Primitives.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("BloodStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Discriminator")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("PictureId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PictureId");

                    b.ToTable("Characters", (string)null);

                    b.HasDiscriminator().HasValue("Character");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.StudentSubject", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid");

                    b.HasKey("StudentId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("StudentSubject");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Subject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("ProfessorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId")
                        .IsUnique();

                    b.ToTable("Subject", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bde6e9c4-bda0-4565-85b4-6f7742a5e1fc"),
                            Description = "Quam sit dignissimos et sed.",
                            Name = "Arithmancy"
                        },
                        new
                        {
                            Id = new Guid("bdda9344-b2fc-4700-b88c-13b2aebc2bb8"),
                            Description = "Expedita enim veritatis iure sapiente omnis quia sint.",
                            Name = "Charms"
                        },
                        new
                        {
                            Id = new Guid("08434c02-6507-4563-aae3-eea57027e8c9"),
                            Description = "Impedit quasi at exercitationem qui id et esse quia.",
                            Name = "Arithmancy"
                        },
                        new
                        {
                            Id = new Guid("7408a685-c6f2-414f-84ce-c76ae5495379"),
                            Description = "Sed consequatur nihil hic odit laudantium impedit qui officia.",
                            Name = "Charms"
                        },
                        new
                        {
                            Id = new Guid("70d9043c-2d3f-4cde-823b-edbc57b31c3c"),
                            Description = "Qui expedita error eius quod quae laboriosam ut provident aliquid.",
                            Name = "Transfiguration"
                        },
                        new
                        {
                            Id = new Guid("07621e72-4041-4fc1-9b95-ab791cceb98a"),
                            Description = "Eligendi voluptates similique non est nisi cum.",
                            Name = "Charms"
                        },
                        new
                        {
                            Id = new Guid("c8e5f9b6-af49-4673-81e6-1d001116fcc2"),
                            Description = "Repudiandae voluptatem est et placeat vel unde dolorem voluptas.",
                            Name = "Divination"
                        },
                        new
                        {
                            Id = new Guid("3629fa29-3401-47c1-b073-b607de052325"),
                            Description = "Dolor molestias est fugit perspiciatis.",
                            Name = "Defense Against the Dark Arts"
                        },
                        new
                        {
                            Id = new Guid("655003a3-9e65-46c5-8e94-29dea512929a"),
                            Description = "Est sunt consectetur repudiandae facere quas qui dolor.",
                            Name = "Herbology"
                        },
                        new
                        {
                            Id = new Guid("3efc23ab-605b-4b3b-9991-43340654cfb8"),
                            Description = "Sint aut non.",
                            Name = "Defense Against the Dark Arts"
                        });
                });

            modelBuilder.Entity("Hogwarts.Infrastructure.Identities.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Career")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "a3529bdd-913b-46e9-a204-c89bdc8640eb",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "b3dd4ff2-ac9f-4908-b889-16bf77c5facf",
                            Name = "Client",
                            NormalizedName = "CLIENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "POLICIES",
                            ClaimValue = "SUBJECT_CREATE",
                            RoleId = "a3529bdd-913b-46e9-a204-c89bdc8640eb"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "POLICIES",
                            ClaimValue = "SUBJECT_READ",
                            RoleId = "a3529bdd-913b-46e9-a204-c89bdc8640eb"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "POLICIES",
                            ClaimValue = "SUBJECT_UPDATE",
                            RoleId = "a3529bdd-913b-46e9-a204-c89bdc8640eb"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "POLICIES",
                            ClaimValue = "SUBJECT_DELETE",
                            RoleId = "a3529bdd-913b-46e9-a204-c89bdc8640eb"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_READ",
                            RoleId = "a3529bdd-913b-46e9-a204-c89bdc8640eb"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_CREATE",
                            RoleId = "a3529bdd-913b-46e9-a204-c89bdc8640eb"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_UPDATE",
                            RoleId = "a3529bdd-913b-46e9-a204-c89bdc8640eb"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_DELETE",
                            RoleId = "a3529bdd-913b-46e9-a204-c89bdc8640eb"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_READ",
                            RoleId = "a3529bdd-913b-46e9-a204-c89bdc8640eb"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_CREATE",
                            RoleId = "a3529bdd-913b-46e9-a204-c89bdc8640eb"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_UPDATE",
                            RoleId = "a3529bdd-913b-46e9-a204-c89bdc8640eb"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_DELETE",
                            RoleId = "a3529bdd-913b-46e9-a204-c89bdc8640eb"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "POLICIES",
                            ClaimValue = "SUBJECT_READ",
                            RoleId = "b3dd4ff2-ac9f-4908-b889-16bf77c5facf"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_READ",
                            RoleId = "b3dd4ff2-ac9f-4908-b889-16bf77c5facf"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_READ",
                            RoleId = "b3dd4ff2-ac9f-4908-b889-16bf77c5facf"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Professor", b =>
                {
                    b.HasBaseType("Hogwarts.Domain.Entities.Primitives.Character");

                    b.Property<Guid?>("SubjectId")
                        .HasColumnType("uuid");

                    b.ToTable("Professors", (string)null);

                    b.HasDiscriminator().HasValue("Professor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b5486669-8172-4f8f-8700-56e38d800937"),
                            Age = 55,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1965, 6, 11, 12, 11, 57, 186, DateTimeKind.Utc).AddTicks(5902),
                            Description = "Molestiae consequatur dignissimos totam maxime officia dolorem occaecati.",
                            FirstName = "Hugo",
                            LastName = "Valle",
                            PictureId = new Guid("55b6afa3-7e3f-41b1-9b36-0b7aa74f9ceb"),
                            SubjectId = new Guid("c8e5f9b6-af49-4673-81e6-1d001116fcc2")
                        },
                        new
                        {
                            Id = new Guid("953aaa20-84e3-4fde-aecb-ec09aa4c2740"),
                            Age = 45,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(1950, 9, 18, 8, 15, 10, 298, DateTimeKind.Utc).AddTicks(1119),
                            Description = "Laborum qui laborum labore sint possimus harum aliquid dolorum nam.",
                            FirstName = "Sonia",
                            LastName = "Alejandro",
                            PictureId = new Guid("5eb9d481-d716-4f33-a5d3-bea17aa48785"),
                            SubjectId = new Guid("c8e5f9b6-af49-4673-81e6-1d001116fcc2")
                        },
                        new
                        {
                            Id = new Guid("66e53835-8b70-4dda-af00-93734725332f"),
                            Age = 48,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(1948, 6, 3, 22, 37, 9, 762, DateTimeKind.Utc).AddTicks(3963),
                            Description = "Impedit ipsum ut rerum fugit qui dicta nihil tenetur vero.",
                            FirstName = "Dorotea",
                            LastName = "Griego",
                            PictureId = new Guid("4543bd5a-b598-4f02-8ce8-bdcd65b07558"),
                            SubjectId = new Guid("bde6e9c4-bda0-4565-85b4-6f7742a5e1fc")
                        },
                        new
                        {
                            Id = new Guid("f2342aed-f5f6-45bd-bd98-46e1facd32d0"),
                            Age = 65,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(1957, 5, 18, 8, 33, 50, 537, DateTimeKind.Utc).AddTicks(9024),
                            Description = "Magnam est itaque repudiandae id et aut officia et.",
                            FirstName = "Fernando",
                            LastName = "Pantoja",
                            PictureId = new Guid("b07aba7f-5bd1-43c6-847b-53bc91629f22"),
                            SubjectId = new Guid("3629fa29-3401-47c1-b073-b607de052325")
                        },
                        new
                        {
                            Id = new Guid("f64056b7-e6e7-4ed2-aa26-caf3c850bb6f"),
                            Age = 43,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1980, 1, 28, 17, 46, 50, 235, DateTimeKind.Utc).AddTicks(6802),
                            Description = "Quia aliquid veritatis error architecto voluptas aliquid.",
                            FirstName = "Miguel Ángel",
                            LastName = "Carrillo",
                            PictureId = new Guid("2b62e0a8-02fa-41dc-bc19-91b9a05752c3"),
                            SubjectId = new Guid("07621e72-4041-4fc1-9b95-ab791cceb98a")
                        },
                        new
                        {
                            Id = new Guid("bdc4ded5-2fe9-40e0-8455-cf9a179b60d0"),
                            Age = 25,
                            BloodStatus = 3,
                            DateOfBirth = new DateTime(1998, 11, 19, 5, 43, 9, 959, DateTimeKind.Utc).AddTicks(832),
                            Description = "Illum et aut nemo.",
                            FirstName = "María Soledad",
                            LastName = "Espinoza",
                            PictureId = new Guid("2e6c4960-6047-4fb7-8765-8f3a9b60f89c"),
                            SubjectId = new Guid("08434c02-6507-4563-aae3-eea57027e8c9")
                        },
                        new
                        {
                            Id = new Guid("1682f110-8b72-4b79-a5a4-6118a1640dd9"),
                            Age = 49,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(1970, 4, 17, 18, 37, 26, 688, DateTimeKind.Utc).AddTicks(2457),
                            Description = "Ea consectetur ut sint aut corporis porro.",
                            FirstName = "Javier",
                            LastName = "Vélez",
                            PictureId = new Guid("06d95a53-55e2-48f6-912e-68cbc3e65f0e"),
                            SubjectId = new Guid("c8e5f9b6-af49-4673-81e6-1d001116fcc2")
                        },
                        new
                        {
                            Id = new Guid("6421ee11-db05-433a-81ff-9a06781074f5"),
                            Age = 51,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(1928, 7, 5, 18, 22, 20, 48, DateTimeKind.Utc).AddTicks(2524),
                            Description = "Ipsam repellat tempora eum perspiciatis expedita earum perspiciatis nam culpa.",
                            FirstName = "Inés",
                            LastName = "Alcalá",
                            PictureId = new Guid("5e4f57d8-891d-42cc-82d9-079870cbbfd8"),
                            SubjectId = new Guid("3efc23ab-605b-4b3b-9991-43340654cfb8")
                        },
                        new
                        {
                            Id = new Guid("9fbe7688-f448-4eff-a0c9-b1739ac615e8"),
                            Age = 40,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(1980, 4, 2, 3, 47, 41, 594, DateTimeKind.Utc).AddTicks(3596),
                            Description = "Sint beatae est dicta unde.",
                            FirstName = "Luis",
                            LastName = "Gurule",
                            PictureId = new Guid("166effd7-f9c7-4ccd-a1a8-08ba0dc4ac95"),
                            SubjectId = new Guid("70d9043c-2d3f-4cde-823b-edbc57b31c3c")
                        },
                        new
                        {
                            Id = new Guid("0547a9e3-94c6-4f9c-a01a-2658421488b0"),
                            Age = 52,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1948, 2, 20, 1, 32, 38, 827, DateTimeKind.Utc).AddTicks(9755),
                            Description = "Consequuntur qui porro nesciunt eligendi dignissimos et ipsa nihil quia.",
                            FirstName = "Rocío",
                            LastName = "Carvajal",
                            PictureId = new Guid("8b27cd0b-89f4-4c8c-8f9f-5cc7b9de5ade"),
                            SubjectId = new Guid("bdda9344-b2fc-4700-b88c-13b2aebc2bb8")
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Student", b =>
                {
                    b.HasBaseType("Hogwarts.Domain.Entities.Primitives.Character");

                    b.Property<Guid?>("HouseId")
                        .HasColumnType("uuid");

                    b.HasIndex("HouseId");

                    b.ToTable("Students", (string)null);

                    b.HasDiscriminator().HasValue("Student");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3e1f2045-eb30-46f3-9700-724b2a417b1b"),
                            Age = 12,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(2010, 11, 10, 13, 26, 47, 529, DateTimeKind.Utc).AddTicks(8516),
                            Description = "Dolorem quidem possimus ducimus similique consequatur accusantium sequi sequi.",
                            FirstName = "Gregorio",
                            LastName = "Durán",
                            PictureId = new Guid("9737012f-27ad-4e90-9e22-a1d568f9462a"),
                            HouseId = new Guid("384c1d09-4117-4b8d-915c-156e0714957d")
                        },
                        new
                        {
                            Id = new Guid("780cf357-ff16-46e3-9775-7eaa9bb0c1bc"),
                            Age = 17,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(1998, 11, 1, 6, 3, 42, 913, DateTimeKind.Utc).AddTicks(3224),
                            Description = "Aliquam molestiae aut officiis nulla tempore quasi labore odio est.",
                            FirstName = "Yolanda",
                            LastName = "Badillo",
                            PictureId = new Guid("4543bd5a-b598-4f02-8ce8-bdcd65b07558"),
                            HouseId = new Guid("384c1d09-4117-4b8d-915c-156e0714957d")
                        },
                        new
                        {
                            Id = new Guid("9f73ca22-f479-4798-8261-2a7f2b6bce7f"),
                            Age = 13,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(2003, 1, 7, 10, 40, 39, 684, DateTimeKind.Utc).AddTicks(8210),
                            Description = "Ut rerum commodi quo possimus illo consectetur fuga sunt.",
                            FirstName = "Graciela",
                            LastName = "Atencio",
                            PictureId = new Guid("84b2e2a6-f1de-4c51-80b6-2590fbef90dc"),
                            HouseId = new Guid("b534bd09-0c6d-49b0-84c3-2c8150d4cc47")
                        },
                        new
                        {
                            Id = new Guid("998db62e-059a-4a46-816f-1ce991b1820a"),
                            Age = 17,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2002, 10, 8, 2, 31, 18, 367, DateTimeKind.Utc).AddTicks(3097),
                            Description = "Nesciunt error possimus eum laborum laboriosam tenetur beatae sunt tempore.",
                            FirstName = "Arturo",
                            LastName = "Heredia",
                            PictureId = new Guid("3730235f-0b9a-4498-9596-443260c7fbd0"),
                            HouseId = new Guid("7325de75-9112-4d2c-8280-74be7ee00bf1")
                        },
                        new
                        {
                            Id = new Guid("fcd07d50-5b21-43af-97eb-092f2cd351b5"),
                            Age = 15,
                            BloodStatus = 3,
                            DateOfBirth = new DateTime(2004, 1, 20, 11, 55, 57, 193, DateTimeKind.Utc).AddTicks(7920),
                            Description = "Qui voluptas nihil modi quibusdam eius est alias incidunt neque.",
                            FirstName = "Lola",
                            LastName = "Quiróz",
                            PictureId = new Guid("b12650df-3f08-4b1e-8de4-962fe2ec3bb9"),
                            HouseId = new Guid("7325de75-9112-4d2c-8280-74be7ee00bf1")
                        },
                        new
                        {
                            Id = new Guid("b82d66c8-d7b2-493c-9c37-4dd69b501ebc"),
                            Age = 16,
                            BloodStatus = 3,
                            DateOfBirth = new DateTime(2002, 1, 14, 19, 22, 55, 302, DateTimeKind.Utc).AddTicks(2055),
                            Description = "Deserunt consequatur architecto possimus impedit asperiores ut qui qui.",
                            FirstName = "Andrea",
                            LastName = "Terán",
                            PictureId = new Guid("702c3c6c-6501-4680-b057-c5eabc1e4f8d"),
                            HouseId = new Guid("97b63ba7-d78f-448f-b13f-72debe50bea9")
                        },
                        new
                        {
                            Id = new Guid("61f67f12-258d-4a56-b70b-661ec3decef8"),
                            Age = 17,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1996, 3, 23, 18, 27, 13, 757, DateTimeKind.Utc).AddTicks(2251),
                            Description = "Tenetur nostrum quis.",
                            FirstName = "Octavio",
                            LastName = "Pedroza",
                            PictureId = new Guid("e64b0984-01da-46a0-b8e8-fd7d0dd57ff8"),
                            HouseId = new Guid("b534bd09-0c6d-49b0-84c3-2c8150d4cc47")
                        },
                        new
                        {
                            Id = new Guid("633e4120-21cb-4375-ba92-c831a16376d3"),
                            Age = 13,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(2005, 8, 7, 19, 30, 27, 447, DateTimeKind.Utc).AddTicks(3153),
                            Description = "Cupiditate sint pariatur dolorem explicabo.",
                            FirstName = "Gustavo",
                            LastName = "Heredia",
                            PictureId = new Guid("aa0d9359-3b47-48c9-952a-ca4828ece1d9"),
                            HouseId = new Guid("b534bd09-0c6d-49b0-84c3-2c8150d4cc47")
                        },
                        new
                        {
                            Id = new Guid("a85eadd1-e30c-47d1-98ac-bc0878b23b02"),
                            Age = 16,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1993, 11, 6, 17, 38, 27, 680, DateTimeKind.Utc).AddTicks(7421),
                            Description = "Error dolore beatae nemo.",
                            FirstName = "María Elena",
                            LastName = "Casares",
                            PictureId = new Guid("7b5a733f-672f-4626-a2f3-f1c7cdd7d75a"),
                            HouseId = new Guid("7325de75-9112-4d2c-8280-74be7ee00bf1")
                        },
                        new
                        {
                            Id = new Guid("137afe9c-1a05-4802-afb4-8dbc1a5482d8"),
                            Age = 11,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2012, 3, 2, 23, 23, 11, 848, DateTimeKind.Utc).AddTicks(5683),
                            Description = "Voluptatum similique vel et consequatur nobis vero.",
                            FirstName = "Cristóbal",
                            LastName = "Zúñiga",
                            PictureId = new Guid("89ce1eaa-e13b-4faa-98d8-e7d11b0a8cdd"),
                            HouseId = new Guid("b534bd09-0c6d-49b0-84c3-2c8150d4cc47")
                        },
                        new
                        {
                            Id = new Guid("30f983b9-37a3-4e1d-86d8-844363df516f"),
                            Age = 16,
                            BloodStatus = 3,
                            DateOfBirth = new DateTime(2003, 8, 21, 21, 36, 4, 799, DateTimeKind.Utc).AddTicks(9456),
                            Description = "Adipisci et fugiat cumque ipsum maiores consectetur beatae.",
                            FirstName = "Amalia",
                            LastName = "Madera",
                            PictureId = new Guid("7f5f11b7-205f-408d-ab4f-24105e76a533"),
                            HouseId = new Guid("384c1d09-4117-4b8d-915c-156e0714957d")
                        },
                        new
                        {
                            Id = new Guid("ddc45d60-8af5-46cd-ac82-b4c731e2ed8c"),
                            Age = 13,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(2006, 11, 2, 19, 50, 56, 873, DateTimeKind.Utc).AddTicks(7867),
                            Description = "Consequatur dolores ut perspiciatis sint in.",
                            FirstName = "Isabela",
                            LastName = "Pedraza",
                            PictureId = new Guid("2e6c4960-6047-4fb7-8765-8f3a9b60f89c"),
                            HouseId = new Guid("384c1d09-4117-4b8d-915c-156e0714957d")
                        },
                        new
                        {
                            Id = new Guid("631f644c-760d-4dc4-b388-606ed32686e9"),
                            Age = 17,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1997, 3, 24, 9, 7, 6, 943, DateTimeKind.Utc).AddTicks(5919),
                            Description = "Quaerat aliquam voluptates consequatur fugiat sed fuga.",
                            FirstName = "Enrique",
                            LastName = "Gallegos",
                            PictureId = new Guid("cbd23f44-53bd-4c9d-afc6-03299bf99d0a"),
                            HouseId = new Guid("7325de75-9112-4d2c-8280-74be7ee00bf1")
                        },
                        new
                        {
                            Id = new Guid("0ea17444-ba33-4fc2-b42c-b50eb8492f20"),
                            Age = 16,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1999, 7, 17, 17, 7, 17, 195, DateTimeKind.Utc).AddTicks(6990),
                            Description = "Et est illum qui ullam quidem sit iure.",
                            FirstName = "Diego",
                            LastName = "Zepeda",
                            PictureId = new Guid("166effd7-f9c7-4ccd-a1a8-08ba0dc4ac95"),
                            HouseId = new Guid("b534bd09-0c6d-49b0-84c3-2c8150d4cc47")
                        },
                        new
                        {
                            Id = new Guid("e17d8b1b-2309-4202-bf8e-4f3c9204192e"),
                            Age = 12,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(2008, 9, 4, 0, 57, 47, 201, DateTimeKind.Utc).AddTicks(612),
                            Description = "Et fuga debitis ut nihil.",
                            FirstName = "Gregorio",
                            LastName = "Agosto",
                            PictureId = new Guid("25500d78-69eb-4667-8cbf-7e098df88618"),
                            HouseId = new Guid("7325de75-9112-4d2c-8280-74be7ee00bf1")
                        },
                        new
                        {
                            Id = new Guid("8b25cb1c-6f03-4b51-b529-b53aa713f69f"),
                            Age = 15,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2008, 8, 12, 21, 2, 24, 611, DateTimeKind.Utc).AddTicks(4454),
                            Description = "Sapiente tempore incidunt.",
                            FirstName = "Tomás",
                            LastName = "Becerra",
                            PictureId = new Guid("028b448a-acda-48e3-8c61-7f98cf13d419"),
                            HouseId = new Guid("384c1d09-4117-4b8d-915c-156e0714957d")
                        },
                        new
                        {
                            Id = new Guid("eb68391c-9182-4e26-99bf-e73a2474730b"),
                            Age = 17,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1997, 3, 5, 8, 57, 44, 350, DateTimeKind.Utc).AddTicks(5832),
                            Description = "Eaque sed amet ad aut cumque qui eius delectus.",
                            FirstName = "Ramona",
                            LastName = "Elizondo",
                            PictureId = new Guid("e7455d47-a795-4d53-9060-cf9981bdbdf8"),
                            HouseId = new Guid("384c1d09-4117-4b8d-915c-156e0714957d")
                        },
                        new
                        {
                            Id = new Guid("7d58bceb-37a7-4571-bc92-90c7e7167bd0"),
                            Age = 15,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(1996, 5, 27, 20, 41, 59, 351, DateTimeKind.Utc).AddTicks(384),
                            Description = "Consequatur dolor sequi error.",
                            FirstName = "Alfonso",
                            LastName = "Cuellar",
                            PictureId = new Guid("06d95a53-55e2-48f6-912e-68cbc3e65f0e"),
                            HouseId = new Guid("7325de75-9112-4d2c-8280-74be7ee00bf1")
                        },
                        new
                        {
                            Id = new Guid("8df779df-d5d5-49fb-8b29-15ad33abf6e8"),
                            Age = 17,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(1993, 6, 29, 7, 33, 6, 393, DateTimeKind.Utc).AddTicks(5200),
                            Description = "Qui quod error ut eum aut nesciunt illo et quibusdam.",
                            FirstName = "Lucas",
                            LastName = "Escobedo",
                            PictureId = new Guid("55b6afa3-7e3f-41b1-9b36-0b7aa74f9ceb"),
                            HouseId = new Guid("97b63ba7-d78f-448f-b13f-72debe50bea9")
                        },
                        new
                        {
                            Id = new Guid("9ffb1598-0a33-47cb-a595-76eedef3223a"),
                            Age = 11,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(2010, 5, 25, 19, 8, 43, 493, DateTimeKind.Utc).AddTicks(8499),
                            Description = "Pariatur quo rerum aliquid.",
                            FirstName = "María Teresa",
                            LastName = "Pérez",
                            PictureId = new Guid("b07aba7f-5bd1-43c6-847b-53bc91629f22"),
                            HouseId = new Guid("384c1d09-4117-4b8d-915c-156e0714957d")
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Primitives.Character", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.Picture", "Picture")
                        .WithOne("Character")
                        .HasForeignKey("Hogwarts.Domain.Entities.Primitives.Character", "PictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.StudentSubject", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.Student", "Student")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hogwarts.Domain.Entities.Subject", "Subject")
                        .WithMany("StudentSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Subject", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.Professor", "Professor")
                        .WithOne("Subject")
                        .HasForeignKey("Hogwarts.Domain.Entities.Subject", "ProfessorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Hogwarts.Infrastructure.Identities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Hogwarts.Infrastructure.Identities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hogwarts.Infrastructure.Identities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Hogwarts.Infrastructure.Identities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Professor", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.Primitives.Character", null)
                        .WithOne()
                        .HasForeignKey("Hogwarts.Domain.Entities.Professor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Student", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.House", "House")
                        .WithMany("Students")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Hogwarts.Domain.Entities.Primitives.Character", null)
                        .WithOne()
                        .HasForeignKey("Hogwarts.Domain.Entities.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.House", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Picture", b =>
                {
                    b.Navigation("Character");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Subject", b =>
                {
                    b.Navigation("StudentSubjects");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Professor", b =>
                {
                    b.Navigation("Subject");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Student", b =>
                {
                    b.Navigation("StudentSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
