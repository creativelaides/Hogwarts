// <auto-generated />
using System;
using Hogwarts.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Hogwarts.Infrastructure.Migrations
{
    [DbContext(typeof(HogwartsDbContext))]
    partial class HogwartsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hogwarts.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("ProfessorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId")
                        .IsUnique();

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("750b7b2f-fcb3-4b2a-aa3e-c3820c918d8f"),
                            Description = "Ipsum tempore consectetur ut voluptas omnis molestias.",
                            Name = "Potions",
                            ProfessorId = new Guid("96022ed7-22c6-4ddc-b519-64418afd3b17")
                        },
                        new
                        {
                            Id = new Guid("7451bceb-6aa7-406f-9a55-870906df7eaa"),
                            Description = "Est error id aut a.",
                            Name = "Arithmancy",
                            ProfessorId = new Guid("bcca110f-4d47-4464-acf3-be4d19f9bbe7")
                        },
                        new
                        {
                            Id = new Guid("bb335af0-bb41-4f01-932f-c2b853a3b9b0"),
                            Description = "Ex voluptas nemo velit et voluptates ea quaerat dolorem.",
                            Name = "History of Magic",
                            ProfessorId = new Guid("bf078d20-2627-43f1-b030-4fc08ee12942")
                        },
                        new
                        {
                            Id = new Guid("d9e159ed-a3b7-485d-9569-73a733eefa12"),
                            Description = "Illum alias nam quisquam eius pariatur vero quam commodi.",
                            Name = "Arithmancy",
                            ProfessorId = new Guid("b8c94937-5f78-4684-9b0c-1372acb80cef")
                        },
                        new
                        {
                            Id = new Guid("7c7bdae7-3295-4788-bc9a-c309864d0548"),
                            Description = "Atque et vel non est.",
                            Name = "Herbology",
                            ProfessorId = new Guid("d11bc147-af2f-4ffb-bec5-e23e78ecf69c")
                        },
                        new
                        {
                            Id = new Guid("4bdf89fb-fe52-4d0c-b4af-e285e8d57fc6"),
                            Description = "Itaque quidem accusamus minus.",
                            Name = "Divination",
                            ProfessorId = new Guid("45326cf2-d2fd-436b-8467-3a42a7526ff4")
                        },
                        new
                        {
                            Id = new Guid("b9df4ade-39ae-424c-8271-133cf6bef19b"),
                            Description = "Nisi autem occaecati voluptates iste ea eius dolor.",
                            Name = "Charms",
                            ProfessorId = new Guid("a9df18cc-d325-4030-97af-1d89d0ebbe39")
                        },
                        new
                        {
                            Id = new Guid("6c47a25e-4dc0-440a-847b-c8387f6ef877"),
                            Description = "Voluptate sit ipsa.",
                            Name = "Divination",
                            ProfessorId = new Guid("570d8591-fa0a-4320-80fd-60e6923b88d4")
                        },
                        new
                        {
                            Id = new Guid("a2d2f532-f931-428a-b777-8ab00ef28234"),
                            Description = "Eos nobis dolores consequatur qui quia non voluptatem.",
                            Name = "Flying",
                            ProfessorId = new Guid("050cb727-0eed-49d8-85eb-d73fe591db8e")
                        },
                        new
                        {
                            Id = new Guid("54b4588f-9516-4184-8d9c-f749c6754d6a"),
                            Description = "Facere inventore ut.",
                            Name = "Charms",
                            ProfessorId = new Guid("e0bb8237-4c88-4260-8b97-37cc9d36dab4")
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Animal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Element")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Founder")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Houses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("109dd5e7-164c-4cec-b623-d28be70cc2c2"),
                            Animal = "Lion",
                            Element = "Fire",
                            Founder = "Godric Gryffindor",
                            Name = "Gryffindor"
                        },
                        new
                        {
                            Id = new Guid("a784a261-3009-484a-9ca5-d141630c932f"),
                            Animal = "Badger",
                            Element = "Earth",
                            Founder = "Helga Hufflepuff",
                            Name = "Hufflepuff"
                        },
                        new
                        {
                            Id = new Guid("40f4b844-b0a4-4178-a5d9-c2ae70a8932b"),
                            Animal = "Eagle",
                            Element = "Air",
                            Founder = "Rowena Ravenclaw",
                            Name = "Ravenclaw"
                        },
                        new
                        {
                            Id = new Guid("24248a2a-d323-47fd-8be7-3b9e415d9a91"),
                            Animal = "Serpent",
                            Element = "Water",
                            Founder = "Salazar Slytherin",
                            Name = "Slytherin"
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Picture", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.ToTable("Pictures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("01961b12-3bc9-40df-b700-085730a85346"),
                            CharacterId = new Guid("4a5ef299-cb93-414f-ab79-9a68a8fca29a"),
                            Url = "https://picsum.photos/640/480/?image=629"
                        },
                        new
                        {
                            Id = new Guid("832220bb-0e09-48c4-a5ad-e13d62719654"),
                            CharacterId = new Guid("35d5e574-b5c6-476c-b64f-c6afff2f216f"),
                            Url = "https://picsum.photos/640/480/?image=815"
                        },
                        new
                        {
                            Id = new Guid("fcebf517-7d51-462b-be46-edad1a296a5f"),
                            CharacterId = new Guid("42bad019-adf0-4cd9-945a-0fb4d544b560"),
                            Url = "https://picsum.photos/640/480/?image=1061"
                        },
                        new
                        {
                            Id = new Guid("27570a3f-0958-4cf4-95cc-b4e41ce69e24"),
                            CharacterId = new Guid("f3823bd4-ff2c-492b-b350-384eacdacc73"),
                            Url = "https://picsum.photos/640/480/?image=486"
                        },
                        new
                        {
                            Id = new Guid("84978f33-1faf-41eb-b815-2366962d0806"),
                            CharacterId = new Guid("6e71a59c-e1fe-4475-85a8-8ae7eadd0b1c"),
                            Url = "https://picsum.photos/640/480/?image=727"
                        },
                        new
                        {
                            Id = new Guid("71d18bfd-426e-45e7-974e-15c4646f5391"),
                            CharacterId = new Guid("89cdf4ee-480d-4fdc-a241-2648bf12edca"),
                            Url = "https://picsum.photos/640/480/?image=56"
                        },
                        new
                        {
                            Id = new Guid("9a2c71d6-5f21-4ff6-bbd0-746a42880da2"),
                            CharacterId = new Guid("d8d74e5f-2243-49bc-ad52-09dbbc241143"),
                            Url = "https://picsum.photos/640/480/?image=177"
                        },
                        new
                        {
                            Id = new Guid("7fd2381b-8139-4e3b-afa1-a11284082781"),
                            CharacterId = new Guid("c92e4206-5682-4cba-8e74-6cc289adbaad"),
                            Url = "https://picsum.photos/640/480/?image=685"
                        },
                        new
                        {
                            Id = new Guid("7d762647-a6f7-40ae-8ef5-dd09e035533e"),
                            CharacterId = new Guid("7d89bc90-0d93-4ef4-bdab-10d246056524"),
                            Url = "https://picsum.photos/640/480/?image=758"
                        },
                        new
                        {
                            Id = new Guid("f184d732-805a-4d97-81db-e3a935e84278"),
                            CharacterId = new Guid("afcdd9d2-8eca-4b8d-8d3e-25b558fa20b0"),
                            Url = "https://picsum.photos/640/480/?image=985"
                        },
                        new
                        {
                            Id = new Guid("26983c54-ce47-444f-9c7f-b945466ef5cd"),
                            CharacterId = new Guid("dd77d8e5-841d-497e-8d49-12add2937745"),
                            Url = "https://picsum.photos/640/480/?image=893"
                        },
                        new
                        {
                            Id = new Guid("0890ce8e-4df3-43e8-8ea5-37cc9c2ffaf0"),
                            CharacterId = new Guid("2056f277-04a5-4993-b42b-b95409861339"),
                            Url = "https://picsum.photos/640/480/?image=589"
                        },
                        new
                        {
                            Id = new Guid("92b9be95-712b-4bcc-9ba4-be31e7a7d12e"),
                            CharacterId = new Guid("e2e07556-0189-41a2-ae8d-7cd046628a10"),
                            Url = "https://picsum.photos/640/480/?image=851"
                        },
                        new
                        {
                            Id = new Guid("b89b05b8-ebdf-4862-aca3-7b5e83ecea69"),
                            CharacterId = new Guid("e6eb03f6-3127-49f1-b04b-20b436a9de53"),
                            Url = "https://picsum.photos/640/480/?image=375"
                        },
                        new
                        {
                            Id = new Guid("6cd7ed15-c8f8-413f-9ca2-26a51a9f5696"),
                            CharacterId = new Guid("2d2ee102-93ff-4bcd-9585-44935c1bebf5"),
                            Url = "https://picsum.photos/640/480/?image=624"
                        },
                        new
                        {
                            Id = new Guid("31320530-ceb3-4571-864e-8c34b747b924"),
                            CharacterId = new Guid("13b2c9c6-6d59-4c7c-be24-9ab380a2f1fa"),
                            Url = "https://picsum.photos/640/480/?image=85"
                        },
                        new
                        {
                            Id = new Guid("0c4ed495-86c1-4fec-9942-71d6c32bb552"),
                            CharacterId = new Guid("f26e87b8-c04e-4952-9ec4-7f1dd7553dbf"),
                            Url = "https://picsum.photos/640/480/?image=147"
                        },
                        new
                        {
                            Id = new Guid("e022c7ee-03ec-4eb3-b391-4a59a74501c1"),
                            CharacterId = new Guid("dfb80e7b-1d9a-4db5-9b5f-6b0f5f147f44"),
                            Url = "https://picsum.photos/640/480/?image=732"
                        },
                        new
                        {
                            Id = new Guid("c300d4ca-aa33-4789-bde4-8590e09270f4"),
                            CharacterId = new Guid("daaebe41-85ce-40c2-b7dd-1d10c819ca58"),
                            Url = "https://picsum.photos/640/480/?image=419"
                        },
                        new
                        {
                            Id = new Guid("1e33eb0f-ab78-437e-8437-f8d4080d014c"),
                            CharacterId = new Guid("40642373-111c-477c-b9bc-2262b98bd46d"),
                            Url = "https://picsum.photos/640/480/?image=131"
                        },
                        new
                        {
                            Id = new Guid("0b2f9612-cfc0-4164-8a99-b31f697b1b43"),
                            CharacterId = new Guid("96022ed7-22c6-4ddc-b519-64418afd3b17"),
                            Url = "https://picsum.photos/640/480/?image=753"
                        },
                        new
                        {
                            Id = new Guid("4a14947b-ed67-4957-b9f8-8e6bc03e621c"),
                            CharacterId = new Guid("bcca110f-4d47-4464-acf3-be4d19f9bbe7"),
                            Url = "https://picsum.photos/640/480/?image=417"
                        },
                        new
                        {
                            Id = new Guid("f6fb37f8-b57e-4b03-a4f7-256113ec4f5f"),
                            CharacterId = new Guid("bf078d20-2627-43f1-b030-4fc08ee12942"),
                            Url = "https://picsum.photos/640/480/?image=873"
                        },
                        new
                        {
                            Id = new Guid("130b48a8-4ffb-4c4b-8917-7fd7a5d475e1"),
                            CharacterId = new Guid("b8c94937-5f78-4684-9b0c-1372acb80cef"),
                            Url = "https://picsum.photos/640/480/?image=731"
                        },
                        new
                        {
                            Id = new Guid("40ad5a79-dfff-4c30-b75e-451a5b84cedb"),
                            CharacterId = new Guid("d11bc147-af2f-4ffb-bec5-e23e78ecf69c"),
                            Url = "https://picsum.photos/640/480/?image=769"
                        },
                        new
                        {
                            Id = new Guid("19a3455f-96cf-4aed-a37b-f90e34df0fcf"),
                            CharacterId = new Guid("45326cf2-d2fd-436b-8467-3a42a7526ff4"),
                            Url = "https://picsum.photos/640/480/?image=431"
                        },
                        new
                        {
                            Id = new Guid("911bd40e-fa45-4ba8-918f-90cf10bc2bb5"),
                            CharacterId = new Guid("a9df18cc-d325-4030-97af-1d89d0ebbe39"),
                            Url = "https://picsum.photos/640/480/?image=943"
                        },
                        new
                        {
                            Id = new Guid("5ad0a7ff-e61c-4654-9aea-09b50f4f72b1"),
                            CharacterId = new Guid("570d8591-fa0a-4320-80fd-60e6923b88d4"),
                            Url = "https://picsum.photos/640/480/?image=268"
                        },
                        new
                        {
                            Id = new Guid("b8da827f-f045-4098-ba3a-db3fd7dcc520"),
                            CharacterId = new Guid("050cb727-0eed-49d8-85eb-d73fe591db8e"),
                            Url = "https://picsum.photos/640/480/?image=202"
                        },
                        new
                        {
                            Id = new Guid("0f57f8a3-3576-4738-941c-09d2a1af3df7"),
                            CharacterId = new Guid("e0bb8237-4c88-4260-8b97-37cc9d36dab4"),
                            Url = "https://picsum.photos/640/480/?image=180"
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Primitives.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("BloodStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Discriminator")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("PictureId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PictureId");

                    b.ToTable("Characters", (string)null);

                    b.HasDiscriminator().HasValue("Character");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.StudentCourse", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("Hogwarts.Infrastructure.Identities.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Career")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "ee478e3c-43d8-494b-a7b6-52e70a04b1af",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "27ccf3eb-1430-47ee-86cf-c6d52a9ee3a0",
                            Name = "Client",
                            NormalizedName = "CLIENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "POLICIES",
                            ClaimValue = "COURSE_CREATE",
                            RoleId = "ee478e3c-43d8-494b-a7b6-52e70a04b1af"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "POLICIES",
                            ClaimValue = "COURSE_READ",
                            RoleId = "ee478e3c-43d8-494b-a7b6-52e70a04b1af"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "POLICIES",
                            ClaimValue = "COURSE_UPDATE",
                            RoleId = "ee478e3c-43d8-494b-a7b6-52e70a04b1af"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "POLICIES",
                            ClaimValue = "COURSE_DELETE",
                            RoleId = "ee478e3c-43d8-494b-a7b6-52e70a04b1af"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_READ",
                            RoleId = "ee478e3c-43d8-494b-a7b6-52e70a04b1af"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_CREATE",
                            RoleId = "ee478e3c-43d8-494b-a7b6-52e70a04b1af"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_UPDATE",
                            RoleId = "ee478e3c-43d8-494b-a7b6-52e70a04b1af"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_DELETE",
                            RoleId = "ee478e3c-43d8-494b-a7b6-52e70a04b1af"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_READ",
                            RoleId = "ee478e3c-43d8-494b-a7b6-52e70a04b1af"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_CREATE",
                            RoleId = "ee478e3c-43d8-494b-a7b6-52e70a04b1af"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_UPDATE",
                            RoleId = "ee478e3c-43d8-494b-a7b6-52e70a04b1af"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_DELETE",
                            RoleId = "ee478e3c-43d8-494b-a7b6-52e70a04b1af"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "POLICIES",
                            ClaimValue = "COURSE_READ",
                            RoleId = "27ccf3eb-1430-47ee-86cf-c6d52a9ee3a0"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_READ",
                            RoleId = "27ccf3eb-1430-47ee-86cf-c6d52a9ee3a0"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_READ",
                            RoleId = "27ccf3eb-1430-47ee-86cf-c6d52a9ee3a0"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Professor", b =>
                {
                    b.HasBaseType("Hogwarts.Domain.Entities.Primitives.Character");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uuid");

                    b.ToTable("Professors", (string)null);

                    b.HasDiscriminator().HasValue("Professor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("96022ed7-22c6-4ddc-b519-64418afd3b17"),
                            Age = 30,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(1972, 4, 12, 5, 36, 9, 6, DateTimeKind.Utc).AddTicks(2619),
                            Description = "Necessitatibus est est natus architecto assumenda dolores et qui.",
                            FirstName = "Laura",
                            LastName = "Dávila",
                            PictureId = new Guid("0b2f9612-cfc0-4164-8a99-b31f697b1b43"),
                            CourseId = new Guid("750b7b2f-fcb3-4b2a-aa3e-c3820c918d8f")
                        },
                        new
                        {
                            Id = new Guid("bcca110f-4d47-4464-acf3-be4d19f9bbe7"),
                            Age = 32,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(1984, 3, 25, 12, 49, 44, 622, DateTimeKind.Utc).AddTicks(5497),
                            Description = "Eius explicabo quia distinctio sed est temporibus voluptas labore.",
                            FirstName = "Guadalupe",
                            LastName = "Polanco",
                            PictureId = new Guid("4a14947b-ed67-4957-b9f8-8e6bc03e621c"),
                            CourseId = new Guid("7451bceb-6aa7-406f-9a55-870906df7eaa")
                        },
                        new
                        {
                            Id = new Guid("bf078d20-2627-43f1-b030-4fc08ee12942"),
                            Age = 49,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(1973, 9, 15, 19, 4, 25, 605, DateTimeKind.Utc).AddTicks(7054),
                            Description = "Et voluptatem illo numquam.",
                            FirstName = "Agustín",
                            LastName = "Magaña",
                            PictureId = new Guid("f6fb37f8-b57e-4b03-a4f7-256113ec4f5f"),
                            CourseId = new Guid("bb335af0-bb41-4f01-932f-c2b853a3b9b0")
                        },
                        new
                        {
                            Id = new Guid("b8c94937-5f78-4684-9b0c-1372acb80cef"),
                            Age = 64,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1944, 8, 23, 14, 3, 17, 580, DateTimeKind.Utc).AddTicks(6682),
                            Description = "Vero aut dolore voluptates nulla consequatur quas voluptatem est et.",
                            FirstName = "Beatriz",
                            LastName = "Godoy",
                            PictureId = new Guid("130b48a8-4ffb-4c4b-8917-7fd7a5d475e1"),
                            CourseId = new Guid("d9e159ed-a3b7-485d-9569-73a733eefa12")
                        },
                        new
                        {
                            Id = new Guid("d11bc147-af2f-4ffb-bec5-e23e78ecf69c"),
                            Age = 58,
                            BloodStatus = 3,
                            DateOfBirth = new DateTime(1936, 2, 23, 16, 19, 38, 668, DateTimeKind.Utc).AddTicks(9764),
                            Description = "Quas quae recusandae sunt aut voluptatibus sequi.",
                            FirstName = "Luisa",
                            LastName = "Carrillo",
                            PictureId = new Guid("40ad5a79-dfff-4c30-b75e-451a5b84cedb"),
                            CourseId = new Guid("7c7bdae7-3295-4788-bc9a-c309864d0548")
                        },
                        new
                        {
                            Id = new Guid("45326cf2-d2fd-436b-8467-3a42a7526ff4"),
                            Age = 41,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(1975, 6, 25, 15, 25, 20, 417, DateTimeKind.Utc).AddTicks(168),
                            Description = "Dolore similique natus eum illum eligendi.",
                            FirstName = "Gregorio",
                            LastName = "Coronado",
                            PictureId = new Guid("19a3455f-96cf-4aed-a37b-f90e34df0fcf"),
                            CourseId = new Guid("4bdf89fb-fe52-4d0c-b4af-e285e8d57fc6")
                        },
                        new
                        {
                            Id = new Guid("a9df18cc-d325-4030-97af-1d89d0ebbe39"),
                            Age = 64,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(1949, 12, 30, 19, 43, 31, 721, DateTimeKind.Utc).AddTicks(2820),
                            Description = "Perspiciatis ratione est.",
                            FirstName = "Rosalia",
                            LastName = "Rael",
                            PictureId = new Guid("911bd40e-fa45-4ba8-918f-90cf10bc2bb5"),
                            CourseId = new Guid("b9df4ade-39ae-424c-8271-133cf6bef19b")
                        },
                        new
                        {
                            Id = new Guid("570d8591-fa0a-4320-80fd-60e6923b88d4"),
                            Age = 56,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(1932, 10, 24, 17, 50, 20, 662, DateTimeKind.Utc).AddTicks(1371),
                            Description = "Non ea earum iste rerum animi.",
                            FirstName = "Gregorio",
                            LastName = "Montenegro",
                            PictureId = new Guid("5ad0a7ff-e61c-4654-9aea-09b50f4f72b1"),
                            CourseId = new Guid("6c47a25e-4dc0-440a-847b-c8387f6ef877")
                        },
                        new
                        {
                            Id = new Guid("050cb727-0eed-49d8-85eb-d73fe591db8e"),
                            Age = 55,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(1957, 9, 22, 21, 39, 24, 617, DateTimeKind.Utc).AddTicks(8895),
                            Description = "Nihil ea ducimus molestias.",
                            FirstName = "Adriana",
                            LastName = "Cervántez",
                            PictureId = new Guid("b8da827f-f045-4098-ba3a-db3fd7dcc520"),
                            CourseId = new Guid("a2d2f532-f931-428a-b777-8ab00ef28234")
                        },
                        new
                        {
                            Id = new Guid("e0bb8237-4c88-4260-8b97-37cc9d36dab4"),
                            Age = 37,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1959, 9, 20, 7, 9, 0, 891, DateTimeKind.Utc).AddTicks(7255),
                            Description = "Voluptatum sed voluptatem nisi ut magni ut voluptates officiis culpa.",
                            FirstName = "Caridad",
                            LastName = "Urbina",
                            PictureId = new Guid("0f57f8a3-3576-4738-941c-09d2a1af3df7"),
                            CourseId = new Guid("54b4588f-9516-4184-8d9c-f749c6754d6a")
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Student", b =>
                {
                    b.HasBaseType("Hogwarts.Domain.Entities.Primitives.Character");

                    b.Property<Guid?>("HouseId")
                        .HasColumnType("uuid");

                    b.HasIndex("HouseId");

                    b.ToTable("Students", (string)null);

                    b.HasDiscriminator().HasValue("Student");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4a5ef299-cb93-414f-ab79-9a68a8fca29a"),
                            Age = 11,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(2003, 5, 28, 6, 8, 36, 502, DateTimeKind.Utc).AddTicks(1543),
                            Description = "Autem perspiciatis cum est officia qui sit perferendis.",
                            FirstName = "Antonio",
                            LastName = "Raya",
                            PictureId = new Guid("01961b12-3bc9-40df-b700-085730a85346"),
                            HouseId = new Guid("40f4b844-b0a4-4178-a5d9-c2ae70a8932b")
                        },
                        new
                        {
                            Id = new Guid("35d5e574-b5c6-476c-b64f-c6afff2f216f"),
                            Age = 15,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(2003, 7, 28, 6, 14, 38, 236, DateTimeKind.Utc).AddTicks(9287),
                            Description = "Itaque ipsa nihil velit at et aperiam.",
                            FirstName = "Cristina",
                            LastName = "Vergara",
                            PictureId = new Guid("832220bb-0e09-48c4-a5ad-e13d62719654"),
                            HouseId = new Guid("24248a2a-d323-47fd-8be7-3b9e415d9a91")
                        },
                        new
                        {
                            Id = new Guid("42bad019-adf0-4cd9-945a-0fb4d544b560"),
                            Age = 13,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2001, 7, 3, 17, 29, 10, 595, DateTimeKind.Utc).AddTicks(2784),
                            Description = "Asperiores veritatis quis dolores placeat sint qui quia.",
                            FirstName = "Octavio",
                            LastName = "Cervántez",
                            PictureId = new Guid("fcebf517-7d51-462b-be46-edad1a296a5f"),
                            HouseId = new Guid("a784a261-3009-484a-9ca5-d141630c932f")
                        },
                        new
                        {
                            Id = new Guid("f3823bd4-ff2c-492b-b350-384eacdacc73"),
                            Age = 12,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2004, 11, 16, 20, 53, 29, 197, DateTimeKind.Utc).AddTicks(7338),
                            Description = "Tenetur nesciunt nihil id nulla voluptate vel quia ipsum.",
                            FirstName = "Rafael",
                            LastName = "Ocasio",
                            PictureId = new Guid("27570a3f-0958-4cf4-95cc-b4e41ce69e24"),
                            HouseId = new Guid("a784a261-3009-484a-9ca5-d141630c932f")
                        },
                        new
                        {
                            Id = new Guid("6e71a59c-e1fe-4475-85a8-8ae7eadd0b1c"),
                            Age = 17,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(2005, 4, 10, 14, 31, 12, 481, DateTimeKind.Utc).AddTicks(2991),
                            Description = "Occaecati tempore consequatur alias repellendus harum corrupti excepturi cupiditate.",
                            FirstName = "Lucía",
                            LastName = "Domínguez",
                            PictureId = new Guid("84978f33-1faf-41eb-b815-2366962d0806"),
                            HouseId = new Guid("a784a261-3009-484a-9ca5-d141630c932f")
                        },
                        new
                        {
                            Id = new Guid("89cdf4ee-480d-4fdc-a241-2648bf12edca"),
                            Age = 13,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(2006, 2, 8, 9, 24, 37, 508, DateTimeKind.Utc).AddTicks(9545),
                            Description = "Maiores eos laboriosam doloribus.",
                            FirstName = "Natalia",
                            LastName = "Rosas",
                            PictureId = new Guid("71d18bfd-426e-45e7-974e-15c4646f5391"),
                            HouseId = new Guid("24248a2a-d323-47fd-8be7-3b9e415d9a91")
                        },
                        new
                        {
                            Id = new Guid("d8d74e5f-2243-49bc-ad52-09dbbc241143"),
                            Age = 11,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(2004, 4, 5, 3, 51, 33, 137, DateTimeKind.Utc).AddTicks(3870),
                            Description = "Quasi cum vel nihil nemo sed blanditiis.",
                            FirstName = "Antonia",
                            LastName = "Chávez",
                            PictureId = new Guid("9a2c71d6-5f21-4ff6-bbd0-746a42880da2"),
                            HouseId = new Guid("a784a261-3009-484a-9ca5-d141630c932f")
                        },
                        new
                        {
                            Id = new Guid("c92e4206-5682-4cba-8e74-6cc289adbaad"),
                            Age = 11,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(2012, 2, 27, 12, 51, 25, 537, DateTimeKind.Utc).AddTicks(3531),
                            Description = "Rerum ducimus modi quos necessitatibus.",
                            FirstName = "José Emilio",
                            LastName = "Mireles",
                            PictureId = new Guid("7fd2381b-8139-4e3b-afa1-a11284082781"),
                            HouseId = new Guid("a784a261-3009-484a-9ca5-d141630c932f")
                        },
                        new
                        {
                            Id = new Guid("7d89bc90-0d93-4ef4-bdab-10d246056524"),
                            Age = 13,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(2006, 1, 30, 8, 42, 19, 861, DateTimeKind.Utc).AddTicks(9294),
                            Description = "Natus asperiores voluptas quia laudantium quas facere.",
                            FirstName = "Felipe",
                            LastName = "Alba",
                            PictureId = new Guid("7d762647-a6f7-40ae-8ef5-dd09e035533e"),
                            HouseId = new Guid("40f4b844-b0a4-4178-a5d9-c2ae70a8932b")
                        },
                        new
                        {
                            Id = new Guid("afcdd9d2-8eca-4b8d-8d3e-25b558fa20b0"),
                            Age = 13,
                            BloodStatus = 3,
                            DateOfBirth = new DateTime(1998, 12, 11, 10, 25, 20, 804, DateTimeKind.Utc).AddTicks(4055),
                            Description = "Accusantium autem aut dolores ipsum qui hic sunt cum.",
                            FirstName = "Ricardo",
                            LastName = "Almaráz",
                            PictureId = new Guid("f184d732-805a-4d97-81db-e3a935e84278"),
                            HouseId = new Guid("a784a261-3009-484a-9ca5-d141630c932f")
                        },
                        new
                        {
                            Id = new Guid("dd77d8e5-841d-497e-8d49-12add2937745"),
                            Age = 14,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(1997, 8, 8, 9, 23, 23, 197, DateTimeKind.Utc).AddTicks(3172),
                            Description = "Id expedita aliquid dignissimos quae harum.",
                            FirstName = "Gabriela",
                            LastName = "de Jesús",
                            PictureId = new Guid("26983c54-ce47-444f-9c7f-b945466ef5cd"),
                            HouseId = new Guid("109dd5e7-164c-4cec-b623-d28be70cc2c2")
                        },
                        new
                        {
                            Id = new Guid("2056f277-04a5-4993-b42b-b95409861339"),
                            Age = 13,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(2008, 7, 30, 19, 5, 36, 265, DateTimeKind.Utc).AddTicks(2565),
                            Description = "Est velit temporibus.",
                            FirstName = "Roberto",
                            LastName = "Rascón",
                            PictureId = new Guid("0890ce8e-4df3-43e8-8ea5-37cc9c2ffaf0"),
                            HouseId = new Guid("a784a261-3009-484a-9ca5-d141630c932f")
                        },
                        new
                        {
                            Id = new Guid("e2e07556-0189-41a2-ae8d-7cd046628a10"),
                            Age = 15,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(1998, 1, 26, 7, 17, 40, 172, DateTimeKind.Utc).AddTicks(6867),
                            Description = "Suscipit repellendus accusantium sit.",
                            FirstName = "Beatriz",
                            LastName = "Alejandro",
                            PictureId = new Guid("92b9be95-712b-4bcc-9ba4-be31e7a7d12e"),
                            HouseId = new Guid("a784a261-3009-484a-9ca5-d141630c932f")
                        },
                        new
                        {
                            Id = new Guid("e6eb03f6-3127-49f1-b04b-20b436a9de53"),
                            Age = 11,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(2009, 5, 2, 14, 36, 55, 773, DateTimeKind.Utc).AddTicks(6721),
                            Description = "Aspernatur est ut.",
                            FirstName = "María Cristina",
                            LastName = "Tirado",
                            PictureId = new Guid("b89b05b8-ebdf-4862-aca3-7b5e83ecea69"),
                            HouseId = new Guid("109dd5e7-164c-4cec-b623-d28be70cc2c2")
                        },
                        new
                        {
                            Id = new Guid("2d2ee102-93ff-4bcd-9585-44935c1bebf5"),
                            Age = 12,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(2002, 8, 5, 22, 3, 33, 718, DateTimeKind.Utc).AddTicks(4108),
                            Description = "Atque rem qui quis esse quia dolorem dolorem soluta quas.",
                            FirstName = "Inés",
                            LastName = "Narváez",
                            PictureId = new Guid("6cd7ed15-c8f8-413f-9ca2-26a51a9f5696"),
                            HouseId = new Guid("109dd5e7-164c-4cec-b623-d28be70cc2c2")
                        },
                        new
                        {
                            Id = new Guid("13b2c9c6-6d59-4c7c-be24-9ab380a2f1fa"),
                            Age = 11,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2005, 7, 16, 11, 41, 32, 935, DateTimeKind.Utc).AddTicks(3254),
                            Description = "Nobis aliquam nulla laboriosam fugiat consequuntur sapiente eligendi sint.",
                            FirstName = "Guadalupe",
                            LastName = "Ureña",
                            PictureId = new Guid("31320530-ceb3-4571-864e-8c34b747b924"),
                            HouseId = new Guid("24248a2a-d323-47fd-8be7-3b9e415d9a91")
                        },
                        new
                        {
                            Id = new Guid("f26e87b8-c04e-4952-9ec4-7f1dd7553dbf"),
                            Age = 11,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(2006, 9, 16, 2, 15, 6, 81, DateTimeKind.Utc).AddTicks(4624),
                            Description = "Aut pariatur aut incidunt sed nesciunt nulla rerum.",
                            FirstName = "Octavio",
                            LastName = "Colunga",
                            PictureId = new Guid("0c4ed495-86c1-4fec-9942-71d6c32bb552"),
                            HouseId = new Guid("109dd5e7-164c-4cec-b623-d28be70cc2c2")
                        },
                        new
                        {
                            Id = new Guid("dfb80e7b-1d9a-4db5-9b5f-6b0f5f147f44"),
                            Age = 17,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(1996, 1, 31, 23, 53, 51, 811, DateTimeKind.Utc).AddTicks(7756),
                            Description = "Doloremque voluptates quam libero nemo ut id illo.",
                            FirstName = "Martín",
                            LastName = "Espino",
                            PictureId = new Guid("e022c7ee-03ec-4eb3-b391-4a59a74501c1"),
                            HouseId = new Guid("a784a261-3009-484a-9ca5-d141630c932f")
                        },
                        new
                        {
                            Id = new Guid("daaebe41-85ce-40c2-b7dd-1d10c819ca58"),
                            Age = 12,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2006, 7, 6, 18, 22, 5, 790, DateTimeKind.Utc).AddTicks(2936),
                            Description = "Dolores provident quam voluptates accusamus.",
                            FirstName = "Antonia",
                            LastName = "Esparza",
                            PictureId = new Guid("c300d4ca-aa33-4789-bde4-8590e09270f4"),
                            HouseId = new Guid("a784a261-3009-484a-9ca5-d141630c932f")
                        },
                        new
                        {
                            Id = new Guid("40642373-111c-477c-b9bc-2262b98bd46d"),
                            Age = 13,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(2007, 3, 23, 22, 35, 26, 99, DateTimeKind.Utc).AddTicks(2198),
                            Description = "Doloribus enim qui cumque soluta nam asperiores sit quo quia.",
                            FirstName = "Elena",
                            LastName = "Ávalos",
                            PictureId = new Guid("1e33eb0f-ab78-437e-8437-f8d4080d014c"),
                            HouseId = new Guid("a784a261-3009-484a-9ca5-d141630c932f")
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Course", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.Professor", "Professor")
                        .WithOne("Course")
                        .HasForeignKey("Hogwarts.Domain.Entities.Course", "ProfessorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Primitives.Character", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.Picture", "Picture")
                        .WithOne("Character")
                        .HasForeignKey("Hogwarts.Domain.Entities.Primitives.Character", "PictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.StudentCourse", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hogwarts.Domain.Entities.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Hogwarts.Infrastructure.Identities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Hogwarts.Infrastructure.Identities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hogwarts.Infrastructure.Identities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Hogwarts.Infrastructure.Identities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Professor", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.Primitives.Character", null)
                        .WithOne()
                        .HasForeignKey("Hogwarts.Domain.Entities.Professor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Student", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.House", "House")
                        .WithMany("Students")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Hogwarts.Domain.Entities.Primitives.Character", null)
                        .WithOne()
                        .HasForeignKey("Hogwarts.Domain.Entities.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.House", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Picture", b =>
                {
                    b.Navigation("Character");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Professor", b =>
                {
                    b.Navigation("Course");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
