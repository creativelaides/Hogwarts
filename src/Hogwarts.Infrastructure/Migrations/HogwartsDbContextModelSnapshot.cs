// <auto-generated />
using System;
using Hogwarts.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Hogwarts.Infrastructure.Migrations
{
    [DbContext(typeof(HogwartsDbContext))]
    partial class HogwartsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Hogwarts.Domain.Entities.Course", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("ProfessorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId")
                        .IsUnique();

                    b.ToTable("Courses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7e8c92d-07ac-4b70-ac85-51893fa639b7"),
                            Description = "Explicabo aliquid dolores.",
                            Name = "Potions",
                            ProfessorId = new Guid("8576eed3-5912-4b62-b2e7-b82673c93d0c")
                        },
                        new
                        {
                            Id = new Guid("fcf889c5-2c34-4ce7-92bc-d76afd69cfa8"),
                            Description = "Exercitationem qui aut id voluptas molestias laudantium.",
                            Name = "Divination",
                            ProfessorId = new Guid("60031c17-23da-40fd-b98f-88564796f289")
                        },
                        new
                        {
                            Id = new Guid("4a9beba4-d0e3-486c-8d60-6d372b1b0da9"),
                            Description = "Voluptatem ullam ipsa nemo accusamus at.",
                            Name = "Transfiguration",
                            ProfessorId = new Guid("5203e0e4-ec98-4d54-890d-0b3b6bc9090f")
                        },
                        new
                        {
                            Id = new Guid("6674d8f1-6bb2-467c-b865-4b3218400204"),
                            Description = "Nulla quia unde.",
                            Name = "Arithmancy",
                            ProfessorId = new Guid("6eee5a2a-3d65-41f0-aadd-a58bdfb1c9a2")
                        },
                        new
                        {
                            Id = new Guid("5de388f6-f352-4f25-a51a-a3ffa4b16652"),
                            Description = "Voluptatem ut quis.",
                            Name = "Herbology",
                            ProfessorId = new Guid("75f724fc-8732-4e4b-89a5-456d852d7bc4")
                        },
                        new
                        {
                            Id = new Guid("a3ce5b6c-1e86-4882-857e-2c5edca7165c"),
                            Description = "Beatae ut perspiciatis accusantium dignissimos omnis ducimus.",
                            Name = "Divination",
                            ProfessorId = new Guid("bc142fbd-7a29-4280-ab36-6e2e5a427c47")
                        },
                        new
                        {
                            Id = new Guid("257f0993-7158-499a-a453-49ce2617757c"),
                            Description = "Eveniet qui amet consequatur dicta rerum dignissimos provident tempore.",
                            Name = "Transfiguration",
                            ProfessorId = new Guid("cd7d42b6-4059-497f-9539-b0f5a083f8bf")
                        },
                        new
                        {
                            Id = new Guid("594b6ea2-8673-4907-af27-f4134e7d0286"),
                            Description = "Eligendi est occaecati ut quasi veniam aliquid saepe quasi.",
                            Name = "Defense Against the Dark Arts",
                            ProfessorId = new Guid("703982ae-85cb-4c6f-ae1b-b0ce653a3524")
                        },
                        new
                        {
                            Id = new Guid("505fbebc-3e0d-44ea-9be1-ebb7ed7c449a"),
                            Description = "Qui cupiditate delectus et voluptatem deserunt nostrum cumque tenetur.",
                            Name = "Potions",
                            ProfessorId = new Guid("db030056-0ed6-4e3d-a7c3-46d586d61e15")
                        },
                        new
                        {
                            Id = new Guid("e536896f-fe74-4b11-86d6-c1a191a16b11"),
                            Description = "In quam voluptatum iure rerum accusantium consequatur et.",
                            Name = "Transfiguration",
                            ProfessorId = new Guid("13a78a3c-9472-4453-9b1f-d3c8879b57c9")
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.House", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Animal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Element")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Founder")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.ToTable("Houses", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("2f30c323-0c50-41ca-bfd5-2525af1f1be9"),
                            Animal = "Lion",
                            Element = "Fire",
                            Founder = "Godric Gryffindor",
                            Name = "Gryffindor"
                        },
                        new
                        {
                            Id = new Guid("803b7918-91a9-46f7-a5d9-5074f79ba946"),
                            Animal = "Badger",
                            Element = "Earth",
                            Founder = "Helga Hufflepuff",
                            Name = "Hufflepuff"
                        },
                        new
                        {
                            Id = new Guid("02b1b2d3-9b14-4dd9-8c76-35ef470ce651"),
                            Animal = "Eagle",
                            Element = "Air",
                            Founder = "Rowena Ravenclaw",
                            Name = "Ravenclaw"
                        },
                        new
                        {
                            Id = new Guid("bf902b43-faed-42ca-97b8-aa1c67acd8ca"),
                            Animal = "Serpent",
                            Element = "Water",
                            Founder = "Salazar Slytherin",
                            Name = "Slytherin"
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Picture", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CharacterId")
                        .HasColumnType("uuid");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.HasKey("Id");

                    b.ToTable("Pictures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3022baec-cf7b-4e28-9ccf-83af7177cb49"),
                            CharacterId = new Guid("7418e34e-cf82-4b61-8f06-bd87e809b732"),
                            Url = "https://picsum.photos/640/480/?image=590"
                        },
                        new
                        {
                            Id = new Guid("5c52fa2f-817d-4d99-9ef0-d9e385a5f62c"),
                            CharacterId = new Guid("41b03c4c-1bc5-4a39-86a7-4636030670b2"),
                            Url = "https://picsum.photos/640/480/?image=75"
                        },
                        new
                        {
                            Id = new Guid("adde71af-a544-4bd4-a49a-94ea5d76ff00"),
                            CharacterId = new Guid("93366cef-84f4-49a3-93a4-5ce413f0725b"),
                            Url = "https://picsum.photos/640/480/?image=915"
                        },
                        new
                        {
                            Id = new Guid("d44b0265-3715-4440-a697-a3079f5f3694"),
                            CharacterId = new Guid("5c077fb3-5636-45ce-aacc-ef2d80234b49"),
                            Url = "https://picsum.photos/640/480/?image=616"
                        },
                        new
                        {
                            Id = new Guid("d9175b5e-91af-451c-8fff-79d43741528e"),
                            CharacterId = new Guid("6a2658cc-8085-4210-a8d8-dc980836e02b"),
                            Url = "https://picsum.photos/640/480/?image=566"
                        },
                        new
                        {
                            Id = new Guid("f1120108-2c4d-48cd-af34-27b59bcb2a22"),
                            CharacterId = new Guid("9d9afdd6-367a-4e96-b24e-5f2ee0539a3d"),
                            Url = "https://picsum.photos/640/480/?image=1007"
                        },
                        new
                        {
                            Id = new Guid("b4ff8d82-e01f-4b1e-963e-6df648cd06a5"),
                            CharacterId = new Guid("978a1a89-6ed7-4865-9622-ce6f295d9510"),
                            Url = "https://picsum.photos/640/480/?image=39"
                        },
                        new
                        {
                            Id = new Guid("01a52a03-4d4a-4db3-83ff-50b2aee22f9f"),
                            CharacterId = new Guid("37d0e30d-f8e6-49d9-b8ee-eab54f552064"),
                            Url = "https://picsum.photos/640/480/?image=0"
                        },
                        new
                        {
                            Id = new Guid("768a7e4a-df7c-46c8-830e-459ff6b8e55a"),
                            CharacterId = new Guid("bcbc4038-4a9f-4c20-8242-9f0f8a0933c0"),
                            Url = "https://picsum.photos/640/480/?image=173"
                        },
                        new
                        {
                            Id = new Guid("8312bf62-ebd1-42e5-8398-ddbc76ed666e"),
                            CharacterId = new Guid("0a0aa4a1-6748-404c-a046-947ea7864c43"),
                            Url = "https://picsum.photos/640/480/?image=704"
                        },
                        new
                        {
                            Id = new Guid("2af32132-0740-4923-bb73-3c2296231d26"),
                            CharacterId = new Guid("f0e36503-ca55-46d2-9899-444bda9da567"),
                            Url = "https://picsum.photos/640/480/?image=765"
                        },
                        new
                        {
                            Id = new Guid("84b38a4d-f3f7-4cbe-ac95-33f6f23a212c"),
                            CharacterId = new Guid("bf9dbe8b-63d9-447c-9772-7ba915118e08"),
                            Url = "https://picsum.photos/640/480/?image=242"
                        },
                        new
                        {
                            Id = new Guid("68cc589b-ca7c-4236-9bf6-40bd6bb7e5ca"),
                            CharacterId = new Guid("f85e0f5b-e124-4f90-8a0f-6c7152152b14"),
                            Url = "https://picsum.photos/640/480/?image=990"
                        },
                        new
                        {
                            Id = new Guid("d97d9548-c5c4-4bfc-936e-d1449d5629e8"),
                            CharacterId = new Guid("0e34e2b7-dc7e-484a-9639-3b8f94716770"),
                            Url = "https://picsum.photos/640/480/?image=342"
                        },
                        new
                        {
                            Id = new Guid("7adb817c-d359-4c20-869e-d93d9d8e9dd2"),
                            CharacterId = new Guid("950b9baa-05b2-4ebb-8394-adeae4552a30"),
                            Url = "https://picsum.photos/640/480/?image=989"
                        },
                        new
                        {
                            Id = new Guid("949868c0-d154-4932-b953-fe87367cfdf9"),
                            CharacterId = new Guid("3431da91-11a1-4d44-8758-bf227a41453f"),
                            Url = "https://picsum.photos/640/480/?image=800"
                        },
                        new
                        {
                            Id = new Guid("30fd2ff0-ed86-448e-85a6-034fb3e388ef"),
                            CharacterId = new Guid("cc7105aa-51f5-489a-be3e-279f95d3e518"),
                            Url = "https://picsum.photos/640/480/?image=649"
                        },
                        new
                        {
                            Id = new Guid("43cb966a-9e47-4625-bee7-979b2ce91ead"),
                            CharacterId = new Guid("4e913452-1f25-4d58-a79e-38778c1a7512"),
                            Url = "https://picsum.photos/640/480/?image=527"
                        },
                        new
                        {
                            Id = new Guid("31d9c3fd-05a6-4e86-ab75-4d4cfc564dda"),
                            CharacterId = new Guid("27f6b61f-42ce-4b38-a983-75a6838d751c"),
                            Url = "https://picsum.photos/640/480/?image=947"
                        },
                        new
                        {
                            Id = new Guid("274f5101-03f6-45ea-9247-9ec159d5b660"),
                            CharacterId = new Guid("27609a7c-4ce8-41b3-a252-5208dd3edf5a"),
                            Url = "https://picsum.photos/640/480/?image=226"
                        },
                        new
                        {
                            Id = new Guid("d350f495-7b2c-4a29-ad57-9574a7db51ea"),
                            CharacterId = new Guid("8576eed3-5912-4b62-b2e7-b82673c93d0c"),
                            Url = "https://picsum.photos/640/480/?image=809"
                        },
                        new
                        {
                            Id = new Guid("41435b4a-c060-43ec-bf77-232d7ceec2d3"),
                            CharacterId = new Guid("60031c17-23da-40fd-b98f-88564796f289"),
                            Url = "https://picsum.photos/640/480/?image=214"
                        },
                        new
                        {
                            Id = new Guid("23cbf5d0-9e29-4046-a221-7fa6cc54fc32"),
                            CharacterId = new Guid("5203e0e4-ec98-4d54-890d-0b3b6bc9090f"),
                            Url = "https://picsum.photos/640/480/?image=105"
                        },
                        new
                        {
                            Id = new Guid("3fb8e9d0-a3fe-4881-9804-f1dcfb045f49"),
                            CharacterId = new Guid("6eee5a2a-3d65-41f0-aadd-a58bdfb1c9a2"),
                            Url = "https://picsum.photos/640/480/?image=821"
                        },
                        new
                        {
                            Id = new Guid("cbe5943e-c9b9-432e-a5dd-f61a71ddd3b2"),
                            CharacterId = new Guid("75f724fc-8732-4e4b-89a5-456d852d7bc4"),
                            Url = "https://picsum.photos/640/480/?image=543"
                        },
                        new
                        {
                            Id = new Guid("33d84a92-eca5-4b3a-8000-63fb23f5d381"),
                            CharacterId = new Guid("bc142fbd-7a29-4280-ab36-6e2e5a427c47"),
                            Url = "https://picsum.photos/640/480/?image=380"
                        },
                        new
                        {
                            Id = new Guid("516a3c6c-55e1-4ffa-a67f-3c1573ff0079"),
                            CharacterId = new Guid("cd7d42b6-4059-497f-9539-b0f5a083f8bf"),
                            Url = "https://picsum.photos/640/480/?image=191"
                        },
                        new
                        {
                            Id = new Guid("e0b78d72-e6d0-4a60-afe3-945ab9162f6c"),
                            CharacterId = new Guid("703982ae-85cb-4c6f-ae1b-b0ce653a3524"),
                            Url = "https://picsum.photos/640/480/?image=892"
                        },
                        new
                        {
                            Id = new Guid("b6518dd1-0624-490c-9c17-311d4cc700a2"),
                            CharacterId = new Guid("db030056-0ed6-4e3d-a7c3-46d586d61e15"),
                            Url = "https://picsum.photos/640/480/?image=1069"
                        },
                        new
                        {
                            Id = new Guid("90f26602-3842-4bf6-b669-2f8221729add"),
                            CharacterId = new Guid("13a78a3c-9472-4453-9b1f-d3c8879b57c9"),
                            Url = "https://picsum.photos/640/480/?image=1044"
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Primitives.Character", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<int>("BloodStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Discriminator")
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid>("PictureId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("PictureId");

                    b.ToTable("Characters", (string)null);

                    b.HasDiscriminator().HasValue("Character");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.StudentCourse", b =>
                {
                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CourseId")
                        .HasColumnType("uuid");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("StudentCourse");
                });

            modelBuilder.Entity("Hogwarts.Infrastructure.Identities.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("Career")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "4f2e0863-e7ba-4ce8-b268-abb12148a718",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "0849e8f0-5d5d-422f-8fe5-14ca51cce10b",
                            Name = "Client",
                            NormalizedName = "CLIENT"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ClaimType = "POLICIES",
                            ClaimValue = "COURSE_CREATE",
                            RoleId = "4f2e0863-e7ba-4ce8-b268-abb12148a718"
                        },
                        new
                        {
                            Id = 2,
                            ClaimType = "POLICIES",
                            ClaimValue = "COURSE_READ",
                            RoleId = "4f2e0863-e7ba-4ce8-b268-abb12148a718"
                        },
                        new
                        {
                            Id = 3,
                            ClaimType = "POLICIES",
                            ClaimValue = "COURSE_UPDATE",
                            RoleId = "4f2e0863-e7ba-4ce8-b268-abb12148a718"
                        },
                        new
                        {
                            Id = 4,
                            ClaimType = "POLICIES",
                            ClaimValue = "COURSE_DELETE",
                            RoleId = "4f2e0863-e7ba-4ce8-b268-abb12148a718"
                        },
                        new
                        {
                            Id = 5,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_READ",
                            RoleId = "4f2e0863-e7ba-4ce8-b268-abb12148a718"
                        },
                        new
                        {
                            Id = 6,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_CREATE",
                            RoleId = "4f2e0863-e7ba-4ce8-b268-abb12148a718"
                        },
                        new
                        {
                            Id = 7,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_UPDATE",
                            RoleId = "4f2e0863-e7ba-4ce8-b268-abb12148a718"
                        },
                        new
                        {
                            Id = 8,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_DELETE",
                            RoleId = "4f2e0863-e7ba-4ce8-b268-abb12148a718"
                        },
                        new
                        {
                            Id = 9,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_READ",
                            RoleId = "4f2e0863-e7ba-4ce8-b268-abb12148a718"
                        },
                        new
                        {
                            Id = 10,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_CREATE",
                            RoleId = "4f2e0863-e7ba-4ce8-b268-abb12148a718"
                        },
                        new
                        {
                            Id = 11,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_UPDATE",
                            RoleId = "4f2e0863-e7ba-4ce8-b268-abb12148a718"
                        },
                        new
                        {
                            Id = 12,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_DELETE",
                            RoleId = "4f2e0863-e7ba-4ce8-b268-abb12148a718"
                        },
                        new
                        {
                            Id = 13,
                            ClaimType = "POLICIES",
                            ClaimValue = "COURSE_READ",
                            RoleId = "0849e8f0-5d5d-422f-8fe5-14ca51cce10b"
                        },
                        new
                        {
                            Id = 14,
                            ClaimType = "POLICIES",
                            ClaimValue = "PROFESSOR_READ",
                            RoleId = "0849e8f0-5d5d-422f-8fe5-14ca51cce10b"
                        },
                        new
                        {
                            Id = 15,
                            ClaimType = "POLICIES",
                            ClaimValue = "STUDENT_READ",
                            RoleId = "0849e8f0-5d5d-422f-8fe5-14ca51cce10b"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Professor", b =>
                {
                    b.HasBaseType("Hogwarts.Domain.Entities.Primitives.Character");

                    b.Property<Guid?>("CourseId")
                        .HasColumnType("uuid");

                    b.ToTable("Professors", (string)null);

                    b.HasDiscriminator().HasValue("Professor");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8576eed3-5912-4b62-b2e7-b82673c93d0c"),
                            Age = 36,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1965, 7, 29, 19, 44, 1, 810, DateTimeKind.Utc).AddTicks(5024),
                            Description = "Mollitia quis dolor pariatur.",
                            FirstName = "Alberto",
                            LastName = "Zúñiga",
                            PictureId = new Guid("d350f495-7b2c-4a29-ad57-9574a7db51ea"),
                            CourseId = new Guid("c7e8c92d-07ac-4b70-ac85-51893fa639b7")
                        },
                        new
                        {
                            Id = new Guid("60031c17-23da-40fd-b98f-88564796f289"),
                            Age = 50,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(1967, 11, 28, 22, 19, 19, 861, DateTimeKind.Utc).AddTicks(9420),
                            Description = "Consectetur enim at occaecati explicabo.",
                            FirstName = "José Luis",
                            LastName = "Meraz",
                            PictureId = new Guid("41435b4a-c060-43ec-bf77-232d7ceec2d3"),
                            CourseId = new Guid("fcf889c5-2c34-4ce7-92bc-d76afd69cfa8")
                        },
                        new
                        {
                            Id = new Guid("5203e0e4-ec98-4d54-890d-0b3b6bc9090f"),
                            Age = 31,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1981, 10, 22, 4, 17, 10, 876, DateTimeKind.Utc).AddTicks(6041),
                            Description = "In quaerat eos et ut laudantium.",
                            FirstName = "Carmen",
                            LastName = "Laboy",
                            PictureId = new Guid("23cbf5d0-9e29-4046-a221-7fa6cc54fc32"),
                            CourseId = new Guid("4a9beba4-d0e3-486c-8d60-6d372b1b0da9")
                        },
                        new
                        {
                            Id = new Guid("6eee5a2a-3d65-41f0-aadd-a58bdfb1c9a2"),
                            Age = 45,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(1947, 11, 21, 21, 15, 31, 567, DateTimeKind.Utc).AddTicks(2783),
                            Description = "Fugit est in id voluptas voluptatem.",
                            FirstName = "Marisol",
                            LastName = "Griego",
                            PictureId = new Guid("3fb8e9d0-a3fe-4881-9804-f1dcfb045f49"),
                            CourseId = new Guid("6674d8f1-6bb2-467c-b865-4b3218400204")
                        },
                        new
                        {
                            Id = new Guid("75f724fc-8732-4e4b-89a5-456d852d7bc4"),
                            Age = 43,
                            BloodStatus = 3,
                            DateOfBirth = new DateTime(1976, 1, 23, 8, 41, 24, 411, DateTimeKind.Utc).AddTicks(6132),
                            Description = "Est autem dicta accusantium illo omnis provident.",
                            FirstName = "Ramiro",
                            LastName = "Casillas",
                            PictureId = new Guid("cbe5943e-c9b9-432e-a5dd-f61a71ddd3b2"),
                            CourseId = new Guid("5de388f6-f352-4f25-a51a-a3ffa4b16652")
                        },
                        new
                        {
                            Id = new Guid("bc142fbd-7a29-4280-ab36-6e2e5a427c47"),
                            Age = 28,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(1971, 12, 20, 5, 29, 0, 202, DateTimeKind.Utc).AddTicks(167),
                            Description = "Facere eos voluptas ipsum.",
                            FirstName = "Josefina",
                            LastName = "Delafuente",
                            PictureId = new Guid("33d84a92-eca5-4b3a-8000-63fb23f5d381"),
                            CourseId = new Guid("a3ce5b6c-1e86-4882-857e-2c5edca7165c")
                        },
                        new
                        {
                            Id = new Guid("cd7d42b6-4059-497f-9539-b0f5a083f8bf"),
                            Age = 34,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(1969, 11, 14, 7, 42, 28, 213, DateTimeKind.Utc).AddTicks(353),
                            Description = "Est officia quia voluptatem.",
                            FirstName = "Lorena",
                            LastName = "Montaño",
                            PictureId = new Guid("516a3c6c-55e1-4ffa-a67f-3c1573ff0079"),
                            CourseId = new Guid("257f0993-7158-499a-a453-49ce2617757c")
                        },
                        new
                        {
                            Id = new Guid("703982ae-85cb-4c6f-ae1b-b0ce653a3524"),
                            Age = 65,
                            BloodStatus = 1,
                            DateOfBirth = new DateTime(1908, 4, 19, 4, 12, 5, 183, DateTimeKind.Utc).AddTicks(4649),
                            Description = "Eveniet ab dolor animi consequuntur temporibus consequatur est.",
                            FirstName = "Jorge",
                            LastName = "Cintrón",
                            PictureId = new Guid("e0b78d72-e6d0-4a60-afe3-945ab9162f6c"),
                            CourseId = new Guid("594b6ea2-8673-4907-af27-f4134e7d0286")
                        },
                        new
                        {
                            Id = new Guid("db030056-0ed6-4e3d-a7c3-46d586d61e15"),
                            Age = 40,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1972, 4, 10, 13, 36, 7, 469, DateTimeKind.Utc).AddTicks(8496),
                            Description = "Distinctio eveniet eveniet adipisci cumque doloribus.",
                            FirstName = "María Soledad",
                            LastName = "Zúñiga",
                            PictureId = new Guid("b6518dd1-0624-490c-9c17-311d4cc700a2"),
                            CourseId = new Guid("505fbebc-3e0d-44ea-9be1-ebb7ed7c449a")
                        },
                        new
                        {
                            Id = new Guid("13a78a3c-9472-4453-9b1f-d3c8879b57c9"),
                            Age = 45,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(1959, 6, 11, 22, 43, 46, 698, DateTimeKind.Utc).AddTicks(2412),
                            Description = "Hic voluptas voluptatem animi in tempora consectetur beatae quisquam.",
                            FirstName = "Andrés",
                            LastName = "Mateo",
                            PictureId = new Guid("90f26602-3842-4bf6-b669-2f8221729add"),
                            CourseId = new Guid("e536896f-fe74-4b11-86d6-c1a191a16b11")
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Student", b =>
                {
                    b.HasBaseType("Hogwarts.Domain.Entities.Primitives.Character");

                    b.Property<Guid?>("HouseId")
                        .HasColumnType("uuid");

                    b.HasIndex("HouseId");

                    b.ToTable("Students", (string)null);

                    b.HasDiscriminator().HasValue("Student");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7418e34e-cf82-4b61-8f06-bd87e809b732"),
                            Age = 17,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(1990, 10, 10, 20, 36, 53, 871, DateTimeKind.Utc).AddTicks(4866),
                            Description = "Maiores error cumque magnam ut ut est eveniet quia et.",
                            FirstName = "Francisca",
                            LastName = "Rentería",
                            PictureId = new Guid("3022baec-cf7b-4e28-9ccf-83af7177cb49"),
                            HouseId = new Guid("2f30c323-0c50-41ca-bfd5-2525af1f1be9")
                        },
                        new
                        {
                            Id = new Guid("41b03c4c-1bc5-4a39-86a7-4636030670b2"),
                            Age = 17,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1998, 4, 21, 21, 6, 50, 799, DateTimeKind.Utc).AddTicks(4786),
                            Description = "Nam corporis est tenetur explicabo ullam nulla voluptatem consequuntur veritatis.",
                            FirstName = "Andrés",
                            LastName = "Quiñónez",
                            PictureId = new Guid("5c52fa2f-817d-4d99-9ef0-d9e385a5f62c"),
                            HouseId = new Guid("bf902b43-faed-42ca-97b8-aa1c67acd8ca")
                        },
                        new
                        {
                            Id = new Guid("93366cef-84f4-49a3-93a4-5ce413f0725b"),
                            Age = 15,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2005, 1, 25, 22, 16, 16, 469, DateTimeKind.Utc).AddTicks(2138),
                            Description = "Voluptatum qui voluptas expedita.",
                            FirstName = "César",
                            LastName = "Badillo",
                            PictureId = new Guid("adde71af-a544-4bd4-a49a-94ea5d76ff00"),
                            HouseId = new Guid("02b1b2d3-9b14-4dd9-8c76-35ef470ce651")
                        },
                        new
                        {
                            Id = new Guid("5c077fb3-5636-45ce-aacc-ef2d80234b49"),
                            Age = 12,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2005, 9, 20, 7, 1, 6, 793, DateTimeKind.Utc).AddTicks(8178),
                            Description = "Possimus qui assumenda unde.",
                            FirstName = "Agustín",
                            LastName = "Pacheco",
                            PictureId = new Guid("d44b0265-3715-4440-a697-a3079f5f3694"),
                            HouseId = new Guid("803b7918-91a9-46f7-a5d9-5074f79ba946")
                        },
                        new
                        {
                            Id = new Guid("6a2658cc-8085-4210-a8d8-dc980836e02b"),
                            Age = 14,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(2005, 8, 18, 15, 4, 7, 598, DateTimeKind.Utc).AddTicks(4371),
                            Description = "Nihil est ducimus harum qui neque.",
                            FirstName = "José Eduardo",
                            LastName = "Barrera",
                            PictureId = new Guid("d9175b5e-91af-451c-8fff-79d43741528e"),
                            HouseId = new Guid("803b7918-91a9-46f7-a5d9-5074f79ba946")
                        },
                        new
                        {
                            Id = new Guid("9d9afdd6-367a-4e96-b24e-5f2ee0539a3d"),
                            Age = 13,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(2010, 2, 10, 22, 50, 5, 486, DateTimeKind.Utc).AddTicks(5851),
                            Description = "Magnam et est corporis consequatur placeat.",
                            FirstName = "Leonor",
                            LastName = "Vallejo",
                            PictureId = new Guid("f1120108-2c4d-48cd-af34-27b59bcb2a22"),
                            HouseId = new Guid("bf902b43-faed-42ca-97b8-aa1c67acd8ca")
                        },
                        new
                        {
                            Id = new Guid("978a1a89-6ed7-4865-9622-ce6f295d9510"),
                            Age = 15,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1994, 10, 15, 23, 10, 26, 932, DateTimeKind.Utc).AddTicks(3607),
                            Description = "Nihil sint cum repudiandae soluta mollitia velit non voluptatem.",
                            FirstName = "Mónica",
                            LastName = "Soliz",
                            PictureId = new Guid("b4ff8d82-e01f-4b1e-963e-6df648cd06a5"),
                            HouseId = new Guid("2f30c323-0c50-41ca-bfd5-2525af1f1be9")
                        },
                        new
                        {
                            Id = new Guid("37d0e30d-f8e6-49d9-b8ee-eab54f552064"),
                            Age = 15,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(1997, 11, 22, 13, 49, 23, 283, DateTimeKind.Utc).AddTicks(7826),
                            Description = "Inventore ipsum cumque ratione non et.",
                            FirstName = "Ariadna",
                            LastName = "Oquendo",
                            PictureId = new Guid("01a52a03-4d4a-4db3-83ff-50b2aee22f9f"),
                            HouseId = new Guid("803b7918-91a9-46f7-a5d9-5074f79ba946")
                        },
                        new
                        {
                            Id = new Guid("bcbc4038-4a9f-4c20-8242-9f0f8a0933c0"),
                            Age = 17,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(2004, 5, 9, 11, 59, 28, 366, DateTimeKind.Utc).AddTicks(7041),
                            Description = "Odio adipisci sint cumque sed illo porro ratione.",
                            FirstName = "Graciela",
                            LastName = "Viera",
                            PictureId = new Guid("768a7e4a-df7c-46c8-830e-459ff6b8e55a"),
                            HouseId = new Guid("bf902b43-faed-42ca-97b8-aa1c67acd8ca")
                        },
                        new
                        {
                            Id = new Guid("0a0aa4a1-6748-404c-a046-947ea7864c43"),
                            Age = 11,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2010, 3, 3, 12, 9, 28, 462, DateTimeKind.Utc).AddTicks(3033),
                            Description = "Praesentium qui pariatur ut sunt a consequatur exercitationem ad quas.",
                            FirstName = "José Emilio",
                            LastName = "Arteaga",
                            PictureId = new Guid("8312bf62-ebd1-42e5-8398-ddbc76ed666e"),
                            HouseId = new Guid("bf902b43-faed-42ca-97b8-aa1c67acd8ca")
                        },
                        new
                        {
                            Id = new Guid("f0e36503-ca55-46d2-9899-444bda9da567"),
                            Age = 14,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2010, 5, 11, 1, 42, 29, 340, DateTimeKind.Utc).AddTicks(4842),
                            Description = "Sunt sapiente et voluptatem nostrum.",
                            FirstName = "Ana Luisa",
                            LastName = "Brito",
                            PictureId = new Guid("2af32132-0740-4923-bb73-3c2296231d26"),
                            HouseId = new Guid("2f30c323-0c50-41ca-bfd5-2525af1f1be9")
                        },
                        new
                        {
                            Id = new Guid("bf9dbe8b-63d9-447c-9772-7ba915118e08"),
                            Age = 14,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(2008, 10, 4, 7, 42, 19, 501, DateTimeKind.Utc).AddTicks(3647),
                            Description = "Incidunt voluptatem voluptate.",
                            FirstName = "Pedro",
                            LastName = "Dueñas",
                            PictureId = new Guid("84b38a4d-f3f7-4cbe-ac95-33f6f23a212c"),
                            HouseId = new Guid("803b7918-91a9-46f7-a5d9-5074f79ba946")
                        },
                        new
                        {
                            Id = new Guid("f85e0f5b-e124-4f90-8a0f-6c7152152b14"),
                            Age = 17,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2005, 5, 3, 14, 0, 48, 94, DateTimeKind.Utc).AddTicks(4147),
                            Description = "Consequuntur eligendi delectus.",
                            FirstName = "Verónica",
                            LastName = "Jurado",
                            PictureId = new Guid("68cc589b-ca7c-4236-9bf6-40bd6bb7e5ca"),
                            HouseId = new Guid("2f30c323-0c50-41ca-bfd5-2525af1f1be9")
                        },
                        new
                        {
                            Id = new Guid("0e34e2b7-dc7e-484a-9639-3b8f94716770"),
                            Age = 17,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(1995, 1, 31, 18, 6, 13, 92, DateTimeKind.Utc).AddTicks(1901),
                            Description = "Voluptatem rem dicta.",
                            FirstName = "Irene",
                            LastName = "Tórrez",
                            PictureId = new Guid("d97d9548-c5c4-4bfc-936e-d1449d5629e8"),
                            HouseId = new Guid("803b7918-91a9-46f7-a5d9-5074f79ba946")
                        },
                        new
                        {
                            Id = new Guid("950b9baa-05b2-4ebb-8394-adeae4552a30"),
                            Age = 12,
                            BloodStatus = 3,
                            DateOfBirth = new DateTime(2005, 3, 12, 18, 14, 46, 329, DateTimeKind.Utc).AddTicks(3615),
                            Description = "Itaque laboriosam dolor officia sunt.",
                            FirstName = "Pablo",
                            LastName = "Crespo",
                            PictureId = new Guid("7adb817c-d359-4c20-869e-d93d9d8e9dd2"),
                            HouseId = new Guid("803b7918-91a9-46f7-a5d9-5074f79ba946")
                        },
                        new
                        {
                            Id = new Guid("3431da91-11a1-4d44-8758-bf227a41453f"),
                            Age = 13,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(2004, 1, 31, 9, 34, 23, 788, DateTimeKind.Utc).AddTicks(5344),
                            Description = "Voluptatem placeat necessitatibus est quis.",
                            FirstName = "Benjamín",
                            LastName = "Barreto",
                            PictureId = new Guid("949868c0-d154-4932-b953-fe87367cfdf9"),
                            HouseId = new Guid("803b7918-91a9-46f7-a5d9-5074f79ba946")
                        },
                        new
                        {
                            Id = new Guid("cc7105aa-51f5-489a-be3e-279f95d3e518"),
                            Age = 11,
                            BloodStatus = 0,
                            DateOfBirth = new DateTime(2010, 4, 21, 20, 32, 17, 709, DateTimeKind.Utc).AddTicks(2511),
                            Description = "Minima eveniet inventore nostrum est.",
                            FirstName = "Carlota",
                            LastName = "Pedraza",
                            PictureId = new Guid("30fd2ff0-ed86-448e-85a6-034fb3e388ef"),
                            HouseId = new Guid("bf902b43-faed-42ca-97b8-aa1c67acd8ca")
                        },
                        new
                        {
                            Id = new Guid("4e913452-1f25-4d58-a79e-38778c1a7512"),
                            Age = 14,
                            BloodStatus = 2,
                            DateOfBirth = new DateTime(2005, 6, 15, 20, 45, 38, 478, DateTimeKind.Utc).AddTicks(4678),
                            Description = "Quo architecto dolores quidem illo.",
                            FirstName = "Clemente",
                            LastName = "Canales",
                            PictureId = new Guid("43cb966a-9e47-4625-bee7-979b2ce91ead"),
                            HouseId = new Guid("02b1b2d3-9b14-4dd9-8c76-35ef470ce651")
                        },
                        new
                        {
                            Id = new Guid("27f6b61f-42ce-4b38-a983-75a6838d751c"),
                            Age = 15,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(1994, 12, 23, 2, 42, 53, 923, DateTimeKind.Utc).AddTicks(8574),
                            Description = "Et sunt expedita ut esse dolor est quisquam laborum.",
                            FirstName = "Estela",
                            LastName = "Robledo",
                            PictureId = new Guid("31d9c3fd-05a6-4e86-ab75-4d4cfc564dda"),
                            HouseId = new Guid("02b1b2d3-9b14-4dd9-8c76-35ef470ce651")
                        },
                        new
                        {
                            Id = new Guid("27609a7c-4ce8-41b3-a252-5208dd3edf5a"),
                            Age = 12,
                            BloodStatus = 4,
                            DateOfBirth = new DateTime(2005, 3, 23, 20, 4, 2, 96, DateTimeKind.Utc).AddTicks(1524),
                            Description = "Earum libero corrupti maiores vel sapiente omnis harum.",
                            FirstName = "Natalia",
                            LastName = "Díaz",
                            PictureId = new Guid("274f5101-03f6-45ea-9247-9ec159d5b660"),
                            HouseId = new Guid("bf902b43-faed-42ca-97b8-aa1c67acd8ca")
                        });
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Course", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.Professor", "Professor")
                        .WithOne("Course")
                        .HasForeignKey("Hogwarts.Domain.Entities.Course", "ProfessorId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Primitives.Character", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.Picture", "Picture")
                        .WithOne("Character")
                        .HasForeignKey("Hogwarts.Domain.Entities.Primitives.Character", "PictureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Picture");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.StudentCourse", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.Course", "Course")
                        .WithMany("StudentCourses")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hogwarts.Domain.Entities.Student", "Student")
                        .WithMany("StudentCourses")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Hogwarts.Infrastructure.Identities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Hogwarts.Infrastructure.Identities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hogwarts.Infrastructure.Identities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Hogwarts.Infrastructure.Identities.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Professor", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.Primitives.Character", null)
                        .WithOne()
                        .HasForeignKey("Hogwarts.Domain.Entities.Professor", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Student", b =>
                {
                    b.HasOne("Hogwarts.Domain.Entities.House", "House")
                        .WithMany("Students")
                        .HasForeignKey("HouseId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Hogwarts.Domain.Entities.Primitives.Character", null)
                        .WithOne()
                        .HasForeignKey("Hogwarts.Domain.Entities.Student", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("House");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Course", b =>
                {
                    b.Navigation("StudentCourses");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.House", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Picture", b =>
                {
                    b.Navigation("Character");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Professor", b =>
                {
                    b.Navigation("Course");
                });

            modelBuilder.Entity("Hogwarts.Domain.Entities.Student", b =>
                {
                    b.Navigation("StudentCourses");
                });
#pragma warning restore 612, 618
        }
    }
}
